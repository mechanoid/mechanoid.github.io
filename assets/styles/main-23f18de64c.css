@import url("https://fonts.googleapis.com/css?family=Montserrat|Lato:100,300,400,400italic,300italic,700italic|Pacifico");
@import url("//maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css");
.fa {
  font-size: 0.8rem;
  position: relative;
}
.fa.fa-twitter {
  color: #4099ff;
  -webkit-transform: translateY(15%);
  transform: translateY(15%);
}
.fa.fa-github-alt {
  -webkit-transform: translateY(10%);
  transform: translateY(10%);
}
@-webkit-keyframes pulse {
  0% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
  50% {
    -webkit-transform: scale(1.05);
    transform: scale(1.05);
  }
  100% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
}
@keyframes pulse {
  0% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
  50% {
    -webkit-transform: scale(1.05);
    transform: scale(1.05);
  }
  100% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
}
@-webkit-keyframes nav-slide {
  0% {
    -webkit-transform: translateX(0%);
    transform: translateX(0%);
  }
  50% {
    -webkit-transform: translateX(-50%);
    transform: translateX(-50%);
  }
  100% {
    -webkit-transform: translateX(-100%);
    transform: translateX(-100%);
  }
}
@keyframes nav-slide {
  0% {
    -webkit-transform: translateX(0%);
    transform: translateX(0%);
  }
  50% {
    -webkit-transform: translateX(-50%);
    transform: translateX(-50%);
  }
  100% {
    -webkit-transform: translateX(-100%);
    transform: translateX(-100%);
  }
}
@-webkit-keyframes nav-slide-tablet {
  0% {
    -webkit-transform: translateX(0%);
    transform: translateX(0%);
  }
  50% {
    -webkit-transform: translateX(-30%);
    transform: translateX(-30%);
  }
  100% {
    -webkit-transform: translateX(-60%);
    transform: translateX(-60%);
  }
}
@keyframes nav-slide-tablet {
  0% {
    -webkit-transform: translateX(0%);
    transform: translateX(0%);
  }
  50% {
    -webkit-transform: translateX(-30%);
    transform: translateX(-30%);
  }
  100% {
    -webkit-transform: translateX(-60%);
    transform: translateX(-60%);
  }
}
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}
body {
  line-height: 1;
}
ol,
ul {
  list-style: none;
}
blockquote,
q {
  quotes: none;
}
blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
/* Typebase.less v0.1.0 | MIT License */
html {
/* Change default typefaces here */
  font-family: serif;
  font-size: 137.5%;
  -webkit-font-smoothing: antialiased;
}
p {
  line-height: 1.5rem;
  margin-top: 1.5rem;
  margin-bottom: 0;
}
ul,
ol {
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;
}
ul li,
ol li {
  line-height: 1.5rem;
}
ul ul,
ol ul,
ul ol,
ol ol {
  margin-top: 0;
  margin-bottom: 0;
}
blockquote {
  line-height: 1.5rem;
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;
}
h1,
h2,
h3,
h4,
h5,
h6 {
/* Change heading typefaces here */
  font-family: sans-serif;
  margin-top: 1.5rem;
  margin-bottom: 0;
  line-height: 1.5rem;
}
h1 {
  font-size: 4.242rem;
  line-height: 4.5rem;
  margin-top: 3rem;
}
h2 {
  font-size: 2.828rem;
  line-height: 3rem;
  margin-top: 3rem;
}
h3 {
  font-size: 1.414rem;
}
h4 {
  font-size: 0.707rem;
}
h5 {
  font-size: 0.471333333333333rem;
}
h6 {
  font-size: 0.3535rem;
}
table {
  margin-top: 1.5rem;
  border-spacing: 0px;
  border-collapse: collapse;
}
table td,
table th {
  padding: 0;
  line-height: 33px;
}
code {
  vertical-align: bottom;
}
.lead {
  font-size: 1.414rem;
}
.hug {
  margin-top: 0;
}
* {
  box-sizing: border-box;
}
html {
  font-size: 150%;
}
.rlb {
  background: #f6f7f9;
}
.rlb {
  font-family: "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  font-weight: 300;
  padding: 0;
  margin: 0;
}
.rlb p {
  font-family: 'Lato', serif;
  font-size: 0.8rem;
}
.rlb em {
  font-style: italic;
}
a {
  text-decoration: none;
  color: #000;
}
a:hover {
  color: #fe4586;
  text-decoration: underline;
}
a:active {
  color: #e83976;
}
a .highlight {
  color: #f00;
}
.brand {
  font-family: 'Pacifico', cursive;
  font-size: 0;
  background-color: #fff;
  width: 3rem;
  height: 3rem;
  text-align: center;
}
.js .brand {
  position: fixed;
  left: 0;
  z-index: 500;
}
.brand .brand-subline {
  display: none;
}
@media only screen and (min-width: 1024px) {
  .brand {
    background-color: transparent;
    color: #000;
    width: 35%;
    height: auto;
    font-size: 1.3rem;
    font-size: 3vw;
    top: 5rem;
    text-align: right;
  }
  .brand .brand-subline {
    margin-top: 1.2rem;
    line-height: 1.5;
    font-family: 'Lato', serif;
    display: block;
    font-size: 0.9rem;
    font-weight: 100;
  }
}
.brand:before {
  font-size: 1rem;
  display: inline-block;
  content: 'Rd';
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%);
}
@media only screen and (min-width: 1024px) {
  .brand:before {
    display: none;
  }
}
.rlb .btn {
  padding: 0.5rem;
  text-align: center;
  font-weight: 100;
  font-family: 'Montserrat', sans-serif;
}
.rlb .btn-primary {
  display: block;
  border: none;
  background-color: #fff;
  color: #000;
  text-transform: uppercase;
}
.rlb .btn-primary:hover {
  background-color: #fe4586;
  color: #fff;
  text-decoration: none;
}
.btn {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  cursor: pointer;
  text-decoration: none;
}
.rlb .rlb-footer .author-information {
  font-family: 'Montserrat', "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  background-color: #fff;
  text-align: center;
  padding: 3rem 1rem;
}
@media only screen and (min-width: 1024px) {
  .rlb .rlb-footer .author-information {
    padding: 8rem 1rem;
  }
}
.rlb .rlb-footer .author-information a {
  font-size: 0.6rem;
}
.rlb .rlb-footer .author-information .author-subline {
  padding-top: 0.5rem;
  font-size: 0.6rem;
  line-height: 1.5;
}
.social-networks > * {
  padding-top: 0.5rem;
}
.author-avatar {
  margin-bottom: 0.5rem;
}
.author-avatar img {
  max-width: 30%;
  border-radius: 100%;
}
@media only screen and (min-width: 700px) {
  .author-avatar img {
    max-width: 200px;
  }
}
.rlb .rlb-footer .copy-right-notice {
  background-color: #00bdff;
  color: #fff;
  text-align: center;
  padding: 2rem 1rem;
  padding-bottom: 6rem;
}
.rlb .rlb-footer .copy-right-notice .copyright-hint {
  font-family: 'Montserrat', "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  text-transform: uppercase;
  font-size: 0.6rem;
  letter-spacing: 1px;
}
.rlb .rlb-footer .impressum-link {
  font-family: 'Montserrat', "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  text-transform: uppercase;
  font-size: 0.6rem;
  letter-spacing: 1px;
  border-bottom: 1px solid #fff;
  padding-bottom: 1rem;
}
.rlb .rlb-footer .impressum-link a {
  color: #fff;
}
.rlb .rlb-footer {
  overflow: hidden;
}
.rlb .headline-primary {
  font-family: 'Montserrat', "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  font-size: 5em;
  font-size: 6vw;
  font-weight: 700;
  text-transform: uppercase;
  line-height: 1.3;
  margin-top: 0.5rem;
}
@media only screen and (min-width: 700px) {
  .rlb .headline-primary {
    font-size: 2rem;
  }
}
.rlb .headline-sub {
  font-family: 'Montserrat', "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  font-size: 1.1rem;
  font-size: 4.5vw;
  line-height: 1.1;
}
@media only screen and (min-width: 700px) {
  .rlb .headline-sub {
    font-size: 1.1rem;
  }
}
.rlb .hero-banner-content {
  background-color: #f6f7f9;
}
.rlb .hero-banner {
  background-color: hero-banner-bg;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
}
@media only screen and (min-width: 700px) {
  .rlb .hero-banner {
    text-align: center;
  }
}
.rlb .hero-banner .hero-banner-message {
  padding: 1rem;
}
.rlb .hero-banner .hero-banner-message .headline-sub,
.rlb .hero-banner .hero-banner-message .headline-primary {
  color: #fff;
}
.rlb .hero-banner .hero-banner-message .hero-banner-call2action {
  margin-top: 2rem;
}
@media only screen and (min-width: 700px) {
  .rlb .hero-banner .hero-banner-message .hero-banner-call2action {
    display: inline-block;
    padding: 0.8rem 4rem;
  }
}
.no-js .rlb .hero-banner-page {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: column;
  -ms-flex-flow: column;
  flex-flow: column;
}
.no-js .rlb .hero-banner-page .hero-banner {
  -webkit-order: -1;
  -ms-flex-order: -1;
  order: -1;
  margin-bottom: 3rem;
}
.no-js .rlb .hero-banner-page .brand.in-hero-banner {
  display: none;
}
.js .rlb .hero-banner {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: -1;
}
.js .rlb .hero-banner .hero-banner-message {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 5%;
}
@media only screen and (min-width: 700px) and (max-width: 1023px) {
  .js .rlb .hero-banner .hero-banner-message {
    left: 10%;
    right: 10%;
  }
}
@media only screen and (min-width: 1024px) {
  .js .rlb .hero-banner .hero-banner-message {
    left: 10%;
    right: 10%;
  }
}
.js .rlb .hero-banner .hero-banner-message .headline-primary {
  font-size: 2vw;
}
@media (-webkit-min-device-pixel-ratio: 2), (-webkit-min-device-pixel-ratio: 3), (min-resolution: 192dpi) {
  .js .rlb .hero-banner .hero-banner-message .headline-primary {
    font-size: 5vw;
  }
}
@media only screen and (min-width: 700px) and (max-width: 1023px) {
  .js .rlb .hero-banner .hero-banner-message .headline-primary {
    font-size: 5vw;
  }
}
@media only screen and (min-width: 1024px) {
  .js .rlb .hero-banner .brand.in-hero-banner {
    color: #fff;
    top: 1rem;
    left: 1rem;
    text-align: left;
  }
  .js .rlb .hero-banner .brand.in-hero-banner .brand-subline {
    display: none;
  }
}
.js .rlb .hero-banner-page > *:first-child {
  display: none;
}
.js .rlb .hero-banner-page > *:last-child {
  display: block;
}
.js .rlb .hero-banner-page > *:target,
.js .rlb .hero-banner-page > .selected-target {
  display: block;
  -webkit-animation: pulse 0.2s linear 1;
  animation: pulse 0.2s linear 1;
}
.js .rlb .hero-banner-page > *:target ~ *,
.js .rlb .hero-banner-page > .selected-target ~ * {
  display: none;
}
.markdown-container h1,
.markdown-container h2,
.markdown-container h3,
.markdown-container h4,
.markdown-container h5,
.markdown-container h6 {
  margin-top: 1.5em;
  margin-bottom: 0;
}
.markdown-container h1 {
  font-size: 1.828rem;
  line-height: 2rem;
}
.markdown-container h2 {
  font-size: 1.414rem;
  line-height: 1.5rem;
}
.markdown-container h3 {
  font-size: 1.107rem;
  line-height: 1.2rem;
}
.markdown-container h4,
.markdown-container h5,
.markdown-container h6 {
  font-size: 1rem;
  line-height: 1.2rem;
}
.markdown-container p {
  margin-top: 0.5rem;
  margin-bottom: 1rem;
}
.nav-link {
  font-family: 'Montserrat', "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  font-size: 0.6rem;
}
.nav-list {
  margin: 0;
  padding: 3rem 0 0 0;
}
.js .nav-list {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  overflow-y: scroll;
}
.nav-item {
  line-height: 1.3;
  padding: 0.5rem 0.5rem 0.5rem 1.5rem;
  position: relative;
  border-top: 1px solid #e6e6e6;
  width: 100%;
}
.nav-item:before {
  position: absolute;
  left: 0.5rem;
  top: 50%;
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%);
  font-size: 0.6rem;
}
.nav-item:last-of-type {
  border-bottom: 1px solid #e6e6e6;
}
.nav-item.impressum {
  margin-top: 3rem;
  border-top: none;
  border-bottom: none;
}
.nav-item.impressum a,
.nav-item.impressum:before {
  color: #b3b3b3;
}
.nav-item.impressum:hover a,
.nav-item.impressum:hover:before {
  color: #000;
}
.nav-item .post-nav-meta,
.nav-item .post-nav-meta span {
  font-family: 'Montserrat', "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  margin-top: 0;
  color: #9e9e9e;
  font-size: 0.5rem !important;
  font-weight: 100;
}
.nav {
  background-color: #fff;
  width: 100%;
}
.js .nav {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 100%;
  z-index: 999;
  -webkit-transform-style: preserve-3d;
  -webkit-overflow-scrolling: touch;
}
.nav.active {
  -webkit-animation: nav-slide 0.2s forwards;
  animation: nav-slide 0.2s forwards;
}
@media only screen and (min-width: 700px) and (max-width: 1023px) {
  .nav.active {
    -webkit-animation: nav-slide-tablet 0.2s forwards;
    animation: nav-slide-tablet 0.2s forwards;
  }
}
@media only screen and (min-width: 1024px) {
  .nav.active {
    -webkit-animation: nav-slide-tablet 0.2s forwards;
    animation: nav-slide-tablet 0.2s forwards;
  }
}
.nav-close {
  display: none;
}
.js .nav-close,
.js .nav-toggle,
.js .nav-rss,
.js .nav-twitter {
  position: absolute;
  border: none;
  outline: none;
}
.nav .nav-rss,
.nav .nav-twitter {
  top: 3rem;
  width: 3rem;
  right: 100%;
  background-color: transparent;
  color: #fff;
  text-align: center;
  padding-top: 1.5rem;
  padding-bottom: 0.5rem;
}
.nav .nav-rss.tooltip:hover:after,
.nav .nav-twitter.tooltip:hover:after {
  right: 80%;
}
.nav .nav-rss:hover,
.nav .nav-twitter:hover {
  color: #fe4586;
  text-decoration: none;
}
.nav .nav-twitter {
  top: 4.5rem;
}
.nav .nav-twitter:hover {
  color: #4099ff;
}
.nav-close {
  top: 1rem;
  right: 1rem;
  background-color: transparent;
  z-index: 1001;
}
.nav-toggle {
  right: 100%;
  top: 0;
  width: 3rem;
  height: 3rem;
  background-color: #fff;
  color: #000;
}
.nav-toggle:after {
  content: 'menu';
  position: absolute;
  top: 50%;
  right: 110%;
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #fff;
  font-family: 'Montserrat', "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  font-weight: bold;
}
.nav-toggle:hover:after {
  color: #fe4586;
}
.post-footer {
  display: none;
  box-sizing: border-box;
  position: fixed;
  top: 100%;
  left: 0;
  width: 100%;
  background-color: #fff;
  padding: 0.5rem 1rem 1rem 1rem;
  z-index: 10;
  border-bottom: 500px solid #fff;
}
.post:target .post-footer,
.post.active .post-footer {
  bottom: -500px;
  top: auto;
}
.post-footer .headline-sub {
  margin: 0;
  padding: 0;
  font-weight: 700;
  width: 100%;
  margin-top: 0.3rem;
  line-height: 1.3;
  font-size: 0.5rem;
}
@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  .post-footer .headline-sub {
    font-size: 0.8rem;
  }
}
.post-footer .post-footer-content .headline-sub {
  padding-top: 0.5rem;
  font-size: 0.65rem;
}
.post-footer .post-footer-content .open {
  display: none;
}
.js .post-footer {
  display: block;
}
.js .post-footer-content {
  overflow: hidden;
  max-height: 0;
  transition: max-height 0.35s ease-out;
}
.js .post-footer .scroll-status {
  display: inline;
}
.js .post-footer .open,
.js .post-footer .copy-link {
  display: block;
  position: absolute;
  top: 0.5rem;
  -webkit-transform: translateY(20%);
  transform: translateY(20%);
}
.js .post-footer .open {
  left: 1rem;
}
.js .post-footer .open.tooltip.up:hover:after {
  left: -0.5rem;
  right: auto;
  bottom: 150%;
  -webkit-transform: translateX(0%);
  transform: translateX(0%);
}
.js .post-footer .copy-link {
  right: 1rem;
  -webkit-transform: translateY(30%);
  transform: translateY(30%);
}
.js .post-footer .copy-link:hover {
  text-decoration: none;
}
.js .post-footer .copy-link.tooltip.up:hover:after {
  right: -0.5rem;
  left: auto;
  bottom: 150%;
  -webkit-transform: translateX(0%);
  transform: translateX(0%);
}
.js .post-footer.active .post-footer-content {
  max-height: 500px;
  transition: max-height 0.25s ease-in;
}
.post-nav {
  text-align: center;
  overflow: hidden;
}
.post-nav .open {
  background: none;
  border: none;
  outline: none;
  cursor: pointer;
}
.post-tldr-headline {
  margin-top: 1.5rem;
}
.post-tldr {
  margin-top: 0.5rem;
  margin-bottom: 1.5rem;
  font-style: italic;
}
.post-view {
  padding: 1rem;
  -webkit-animation: pulse 0.2s linear 1;
  animation: pulse 0.2s linear 1;
}
@media only screen and (min-width: 700px) and (max-width: 1023px) {
  .post-view {
    padding: 1rem 10%;
  }
}
@media only screen and (min-width: 1024px) {
  .post-view {
    padding: 1rem 10% 1rem 40%;
  }
}
.post {
  padding-top: 3rem;
  padding-bottom: 3rem;
  position: relative;
}
.post .markdown-container > h1:first-child + p::first-letter,
.post .markdown-container > h2:first-child + p::first-letter,
.post .markdown-container > h3:first-child + p::first-letter {
  font-size: 3rem;
  float: left;
  line-height: 3rem;
  padding-right: 0.5rem;
}
.post .markdown-container > p:first-child::first-letter {
  font-size: 3rem;
  float: left;
  line-height: 3rem;
  padding-right: 0.5rem;
}
.post-meta {
  font-family: 'Montserrat', "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  margin-top: 0;
}
.post-category,
.post-date,
.post-author {
  font-family: 'Montserrat', "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  font-size: 0.7rem;
  font-size: 3.2vw;
  white-space: nowrap;
}
@media only screen and (min-width: 700px) {
  .post-category,
  .post-date,
  .post-author {
    font-size: 0.7rem;
  }
}
.post-category,
.post-date {
  text-transform: uppercase;
}
.post-author {
  display: block;
  line-height: 1;
}
.posts {
  padding: 1rem;
}
@media only screen and (min-width: 700px) and (max-width: 1023px) {
  .posts {
    padding: 1rem 10%;
  }
}
@media only screen and (min-width: 1024px) {
  .posts {
    padding: 1rem 10% 1rem 40%;
  }
}
.posts a.fa:hover {
  color: #fe4586;
}
.scroll-status {
  margin: 0 auto;
  padding-top: 0;
}
.scroll-status-bubble {
  background-color: #c8c8c8;
  height: 0.2rem;
  width: 0.2rem;
  display: inline-block;
  border-radius: 10px;
  margin-right: 0.5rem;
}
.scroll-status-bubble.active {
  background-color: #7c7a7a;
}
.tooltip:hover:after {
  content: attr(title);
  white-space: nowrap;
  z-index: 9999;
  position: absolute;
  background-color: #323232;
  color: #fff;
  padding: 0.5rem 1rem;
  text-transform: lowercase;
  font-size: 0.6rem;
  border-radius: 3px;
}
.tooltip.left:hover:after,
.tooltip.right:hover:after {
  top: 50%;
  -webkit-transform: translateY(-30%);
  transform: translateY(-30%);
}
.tooltip.left:hover:after {
  right: 100%;
}
.tooltip.right:hover:after {
  left: 100%;
}
.tooltip.bottom:hover:after,
.tooltip.up:hover:after {
  left: 50%;
  -webkit-transform: translateX(-50%);
  transform: translateX(-50%);
}
.tooltip.bottom:hover:after {
  top: 100%;
}
.tooltip.up:hover:after {
  bottom: 100%;
}
pre[class*="language-"] {
  padding: 0.5rem 1rem 0.7rem 1rem;
}
code {
  font-size: 0.6rem;
}
:not(pre) > code[class*="language-"],
pre[class*="language-"] {
  background: #fff;
  margin-right: -1rem;
  margin-left: -1rem;
  line-height: 0.8;
}
.static-view {
  padding: 1rem;
  -webkit-animation: pulse 0.2s linear 1;
  animation: pulse 0.2s linear 1;
}
.static-view h3 {
  margin-bottom: 1rem;
}
.static-view p {
  padding: 0;
  margin-top: 0;
  margin-bottom: 0.5rem;
}
.static-view strong {
  font-weight: bold;
}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uc3R5bCIsImdsb2JhbHMvX3R5cG9ncmFwaHkuc3R5bCIsIm1haW4uY3NzIiwiZ2xvYmFscy9fYW5pbWF0aW9ucy5zdHlsIiwiZ2xvYmFscy9fcmVzZXQuc3R5bCIsImdsb2JhbHMvX3R5cGViYXNlLnN0eWwiLCJnbG9iYWxzL19kZWZhdWx0cy5zdHlsIiwiY29tcG9uZW50cy9icmFuZC9pbmRleC5zdHlsIiwiZ2xvYmFscy9fbXFoZWxwZXIuc3R5bCIsImNvbXBvbmVudHMvYnV0dG9ucy9fYnV0dG9uLXByaW1hcnkuc3R5bCIsImNvbXBvbmVudHMvYnV0dG9ucy9pbmRleC5zdHlsIiwiY29tcG9uZW50cy9mb290ZXIvX2F1dGhvci1pbmZvcm1hdGlvbi5zdHlsIiwiY29tcG9uZW50cy9mb290ZXIvX2NvcHlyaWdodC1ub3RpY2Uuc3R5bCIsImNvbXBvbmVudHMvZm9vdGVyL19pbXByZXNzdW0tbGluay5zdHlsIiwiY29tcG9uZW50cy9mb290ZXIvaW5kZXguc3R5bCIsImNvbXBvbmVudHMvaGVhZGxpbmVzL19oZWFkbGluZS1wcmltYXJ5LnN0eWwiLCJjb21wb25lbnRzL2hlYWRsaW5lcy9faGVhZGxpbmUtc3ViLnN0eWwiLCJjb21wb25lbnRzL2hlcm8tYmFubmVyL2luZGV4LnN0eWwiLCJjb21wb25lbnRzL21hcmtkb3duLWNvbnRhaW5lci9pbmRleC5zdHlsIiwiY29tcG9uZW50cy9uYXYvX25hdi1saW5rLnN0eWwiLCJjb21wb25lbnRzL25hdi9fbmF2LWxpc3Quc3R5bCIsImNvbXBvbmVudHMvbmF2L2luZGV4LnN0eWwiLCJjb21wb25lbnRzL3Bvc3RzL19wb3N0LWZvb3Rlci5zdHlsIiwiY29tcG9uZW50cy9wb3N0cy9fcG9zdC1uYXYuc3R5bCIsImNvbXBvbmVudHMvcG9zdHMvX3Bvc3QtdGxkci5zdHlsIiwiY29tcG9uZW50cy9wb3N0cy9fcG9zdC5zdHlsIiwiY29tcG9uZW50cy9wb3N0cy9pbmRleC5zdHlsIiwiY29tcG9uZW50cy9zY3JvbGwtc3RhdHVzL2luZGV4LnN0eWwiLCJjb21wb25lbnRzL3Rvb2x0aXAvaW5kZXguc3R5bCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBd0gsMEhBQUE7QUFDckMscUZBQUE7QUNpQm5GO0VBQ0Usa0JBQUE7RUFDQSxtQkFBQTtDQ2ZEO0FEaUJDO0VBQ0UsZUFBQTtFQUNBLG1DQUFBO0VBQUEsMkJBQUE7Q0NmSDtBRGlCQztFQUNFLG1DQUFBO0VBQUEsMkJBQUE7Q0NmSDtBQ1plO0VBQ1o7SUFBSyw0QkFBQTtJQUFBLG9CQUFBO0dEMEJOO0VDekJDO0lBQU0sK0JBQUE7SUFBQSx1QkFBQTtHRDRCUDtFQzNCQztJQUFPLDRCQUFBO0lBQUEsb0JBQUE7R0Q4QlI7Q0FDRjtBQ2xDZTtFQUNaO0lBQUssNEJBQUE7SUFBQSxvQkFBQTtHRGdETjtFQy9DQztJQUFNLCtCQUFBO0lBQUEsdUJBQUE7R0RrRFA7RUNqREM7SUFBTyw0QkFBQTtJQUFBLG9CQUFBO0dEb0RSO0NBQ0Y7QUNsRG1CO0VBQ2hCO0lBQUssa0NBQUE7SUFBQSwwQkFBQTtHRGdFTjtFQy9EQztJQUFNLG9DQUFBO0lBQUEsNEJBQUE7R0RrRVA7RUNqRUM7SUFBTyxxQ0FBQTtJQUFBLDZCQUFBO0dEb0VSO0NBQ0Y7QUN4RW1CO0VBQ2hCO0lBQUssa0NBQUE7SUFBQSwwQkFBQTtHRHNGTjtFQ3JGQztJQUFNLG9DQUFBO0lBQUEsNEJBQUE7R0R3RlA7RUN2RkM7SUFBTyxxQ0FBQTtJQUFBLDZCQUFBO0dEMEZSO0NBQ0Y7QUN4RjBCO0VBQ3ZCO0lBQUssa0NBQUE7SUFBQSwwQkFBQTtHRHNHTjtFQ3JHQztJQUFNLG9DQUFBO0lBQUEsNEJBQUE7R0R3R1A7RUN2R0M7SUFBTyxvQ0FBQTtJQUFBLDRCQUFBO0dEMEdSO0NBQ0Y7QUM5RzBCO0VBQ3ZCO0lBQUssa0NBQUE7SUFBQSwwQkFBQTtHRDRITjtFQzNIQztJQUFNLG9DQUFBO0lBQUEsNEJBQUE7R0Q4SFA7RUM3SEM7SUFBTyxvQ0FBQTtJQUFBLDRCQUFBO0dEZ0lSO0NBQ0Y7QUUvSUQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQWFDLFVBQUE7RUFDQSxXQUFBO0VBQ0EsVUFBQTtFQUNBLGdCQUFBO0VBQ0EsY0FBQTtFQUNBLHlCQUFBO0NGcU5BO0FFbE5EOzs7Ozs7Ozs7OztFQUVDLGVBQUE7Q0Y2TkE7QUUzTkQ7RUFDQyxlQUFBO0NGNk5BO0FFM05EOztFQUNDLGlCQUFBO0NGOE5BO0FFNU5EOztFQUNDLGFBQUE7Q0YrTkE7QUU3TkQ7Ozs7RUFFQyxZQUFBO0VBQ0EsY0FBQTtDRmlPQTtBRS9ORDtFQUNDLDBCQUFBO0VBQ0Esa0JBQUE7Q0ZpT0E7QUczUUQsd0NBQUE7QUFFQTtBQUNFLG1DQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtFQUNBLG9DQUFBO0NINFFEO0FHelFEO0VBQ0Usb0JBQUE7RUFDQSxtQkFBQTtFQUNBLGlCQUFBO0NIMlFEO0FHelFEOztFQUVFLG1CQUFBO0VBQ0Esc0JBQUE7Q0gyUUQ7QUd6UUQ7O0VBRUUsb0JBQUE7Q0gyUUQ7QUd6UUQ7Ozs7RUFJRSxjQUFBO0VBQ0EsaUJBQUE7Q0gyUUQ7QUd6UUQ7RUFDRSxvQkFBQTtFQUNBLG1CQUFBO0VBQ0Esc0JBQUE7Q0gyUUQ7QUd4UUQ7Ozs7OztBQU1FLG1DQUFBO0VBQ0Esd0JBQUE7RUFDQSxtQkFBQTtFQUNBLGlCQUFBO0VBQ0Esb0JBQUE7Q0gwUUQ7QUd4UUQ7RUFDRSxvQkFBQTtFQUNBLG9CQUFBO0VBQ0EsaUJBQUE7Q0gwUUQ7QUd4UUQ7RUFDRSxvQkFBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7Q0gwUUQ7QUd4UUQ7RUFDRSxvQkFBQTtDSDBRRDtBR3hRRDtFQUNFLG9CQUFBO0NIMFFEO0FHeFFEO0VBQ0UsZ0NBQUE7Q0gwUUQ7QUd4UUQ7RUFDRSxxQkFBQTtDSDBRRDtBR3ZRRDtFQUNFLG1CQUFBO0VBQ0Esb0JBQUE7RUFDQSwwQkFBQTtDSHlRRDtBR3ZRRDs7RUFFRSxXQUFBO0VBQ0Esa0JBQUE7Q0h5UUQ7QUd0UUQ7RUFDRSx1QkFBQTtDSHdRRDtBR3JRRDtFQUNFLG9CQUFBO0NIdVFEO0FHcFFEO0VBQ0UsY0FBQTtDSHNRRDtBSTlWRDtFQUNFLHVCQUFBO0NKZ1dEO0FJN1ZEO0VBQ0UsZ0JBQUE7Q0orVkQ7QUk3VkQ7RUFDRSxvQkFBQTtDSitWRDtBSTdWRDtFQUNFLDRIQUFBO0VBQ0EsaUJBQUE7RUFDQSxXQUFBO0VBQ0EsVUFBQTtDSitWRDtBSTdWQztFTFpBLDJCQUFBO0VLY0Usa0JBQUE7Q0orVkg7QUk3VkM7RUFDRSxtQkFBQTtDSitWSDtBSTVWRDtFQUNFLHNCQUFBO0VBQ0EsWUFBQTtDSjhWRDtBSTVWQztFQUNFLGVBQUE7RUFDQSwyQkFBQTtDSjhWSDtBSTVWQztFQUNFLGVBQUE7Q0o4Vkg7QUk1VkM7RUFDRSxZQUFBO0NKOFZIO0FLcllEO0VOSUUsaUNBQUE7RU1GQSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0NMdVlEO0FLcllDO0VBQ0UsZ0JBQUE7RUFFQSxRQUFBO0VBQ0EsYUFBQTtDTHNZSDtBS3BZQztFQUNFLGNBQUE7Q0xzWUg7QU1oWjBDO0VBQUE7SURhdkMsOEJBQUE7SUFDQSxZQUFBO0lBQ0EsV0FBQTtJQUNBLGFBQUE7SUFDQSxrQkFBQTtJQUNBLGVBQUE7SUFFQSxVQUFBO0lBQ0Esa0JBQUE7R0xzWUQ7RUtwWUM7SUFDRSxtQkFBQTtJQUNBLGlCQUFBO0lOdkJKLDJCQUFBO0lNeUJJLGVBQUE7SUFDQSxrQkFBQTtJQUNBLGlCQUFBO0dMc1lIO0NBQ0Y7QUtyWUM7RUFDRSxnQkFBQTtFQUNBLHNCQUFBO0VBQ0EsY0FBQTtFQUNBLG1CQUFBO0VBQ0EsU0FBQTtFQUNBLG9DQUFBO0VBQUEsNEJBQUE7Q0x1WUg7QU01YTBDO0VBQUE7SUR3Q3JDLGNBQUE7R0x3WUg7Q0FDRjtBT2piRDtFQUNFLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQkFBQTtFQUNBLHNDQUFBO0NQbWJEO0FPbGJEO0VBQ0UsZUFBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUNBLFlBQUE7RUFDQSwwQkFBQTtDUG9iRDtBT2xiQztFQUNFLDBCQUFBO0VBQ0EsWUFBQTtFQUNBLHNCQUFBO0NQb2JIO0FRdGNEO0VBQ0UsMEJBQUE7RUFBQSx1QkFBQTtFQUFBLHNCQUFBO0VBQUEsa0JBQUE7RUFDQSxnQkFBQTtFQUNBLHNCQUFBO0NSd2NEO0FTN2NEO0VWQ0UsMElBQUE7RVVDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsbUJBQUE7Q1QrY0Q7QU05YzBDO0VBQUE7SUdFdkMsbUJBQUE7R1RnZEQ7Q0FDRjtBUzljQztFQUNFLGtCQUFBO0NUZ2RIO0FTOWNDO0VBQ0Usb0JBQUE7RUFDQSxrQkFBQTtFQUNBLGlCQUFBO0NUZ2RIO0FTN2NDO0VBQ0Usb0JBQUE7Q1QrY0g7QVMzY0Q7RUFDRSxzQkFBQTtDVDZjRDtBUzNjQztFQUNFLGVBQUE7RUFDQSxvQkFBQTtDVDZjSDtBTTVkeUM7RUFBQTtJR2tCcEMsaUJBQUE7R1Q4Y0g7Q0FDRjtBVS9lRDtFQUNFLDBCQUFBO0VBQ0EsWUFBQTtFQUNBLG1CQUFBO0VBQ0EsbUJBQUE7RUFDQSxxQkFBQTtDVmlmRDtBVS9lQztFWE5BLDBJQUFBO0VXUUUsMEJBQUE7RUFDQSxrQkFBQTtFQUNBLG9CQUFBO0NWaWZIO0FXNWZEO0VaQ0UsMElBQUE7RVlDRSwwQkFBQTtFQUNBLGtCQUFBO0VBQ0Esb0JBQUE7RUFDQSw4QkFBQTtFQUNBLHFCQUFBO0NYOGZIO0FXNWZHO0VBQ0UsWUFBQTtDWDhmTDtBWW5nQkQ7RUFDRSxpQkFBQTtDWnFnQkQ7QWExZ0JEO0VkQ0UsMElBQUE7RWNDQSxlQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsMEJBQUE7RUFDQSxpQkFBQTtFQUNBLG1CQUFBO0NiNGdCRDtBTXJnQnlDO0VBQUE7SU9KdEMsZ0JBQUE7R2I2Z0JEO0NBQ0Y7QWN4aEJEO0VmQ0UsMElBQUE7RWVDQSxrQkFBQTtFQUNBLGlCQUFBO0VBQ0EsaUJBQUE7Q2QwaEJEO0FNaGhCeUM7RUFBQTtJUVB0QyxrQkFBQTtHZDJoQkQ7Q0FDRjtBZS9oQkQ7RUFDRSwwQkFBQTtDZmlpQkQ7QWUvaEJEO0VBQ0UsaUNBQUE7RUFDQSw2QkFBQTtFQUNBLHVCQUFBO0VBQ0EsbUNBQUE7Q2ZpaUJEO0FNOWhCeUM7RVNBdEM7SUFDRSxtQkFBQTtHZmlpQkg7Q0FDRjtBZWhpQkM7RUFDRSxjQUFBO0Nma2lCSDtBZWhpQkc7O0VBQ0UsWUFBQTtDZm1pQkw7QWVqaUJHO0VBQ0UsaUJBQUE7Q2ZtaUJMO0FNN2lCeUM7RVNZbEM7SUFDRSxzQkFBQTtJQUNBLHFCQUFBO0dmb2lCUDtDQUNGO0FlbmlCRDtFQUNFLHNCQUFBO0VBQUEscUJBQUE7RUFBQSxjQUFBO0VBQ0EsMEJBQUE7RUFBQSxzQkFBQTtFQUFBLGtCQUFBO0NmcWlCRDtBZW5pQkM7RUFDRSxrQkFBQTtFQUFBLG1CQUFBO0VBQUEsVUFBQTtFQUNBLG9CQUFBO0NmcWlCSDtBZW5pQkM7RUFDRSxjQUFBO0NmcWlCSDtBZW5pQkQ7RUFDSSxnQkFBQTtFQUNBLE9BQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtFQUNBLFFBQUE7RUFFQSxZQUFBO0Nmb2lCSDtBZWxpQkc7RUFDRSxtQkFBQTtFQUNBLFFBQUE7RUFDQSxTQUFBO0VBQ0EsV0FBQTtDZm9pQkw7QU16bEJpRTtFQUFBO0lTd0QxRCxVQUFBO0lBQ0EsV0FBQTtHZnFpQkw7Q0FDRjtBTTNsQjBDO0VBQUE7SVN3RG5DLFVBQUE7SUFDQSxXQUFBO0dmdWlCTDtDQUNGO0FldGlCSztFQUNFLGVBQUE7Q2Z3aUJQO0FNaG1CeUc7RUFBQTtJUzJEaEcsZUFBQTtHZnlpQlA7Q0FDRjtBTTdtQmlFO0VBQUE7SVNzRXhELGVBQUE7R2YyaUJQO0NBQ0Y7QU05bUIwQztFQUFBO0lTc0VuQyxZQUFBO0lBQ0EsVUFBQTtJQUNBLFdBQUE7SUFDQSxpQkFBQTtHZjRpQkw7RWUxaUJLO0lBQ0UsY0FBQTtHZjRpQlA7Q0FDRjtBZXRpQkM7RUFDRSxjQUFBO0Nmd2lCSDtBZXRpQkM7RUFDRSxlQUFBO0Nmd2lCSDtBZXRpQkM7O0VBQ0UsZUFBQTtFQUNBLHVDQUFBO0VBQUEsK0JBQUE7Q2Z5aUJIO0FldmlCQzs7RUFDRSxjQUFBO0NmMGlCSDtBZ0I1b0JDOzs7Ozs7RUFDRSxrQkFBQTtFQUNBLGlCQUFBO0NoQm1wQkg7QWdCanBCQztFQUNFLG9CQUFBO0VBQ0Esa0JBQUE7Q2hCbXBCSDtBZ0JscEJDO0VBQ0Usb0JBQUE7RUFDQSxvQkFBQTtDaEJvcEJIO0FnQm5wQkM7RUFDRSxvQkFBQTtFQUNBLG9CQUFBO0NoQnFwQkg7QWdCcHBCQzs7O0VBQ0UsZ0JBQUE7RUFDQSxvQkFBQTtDaEJ3cEJIO0FnQnRwQkM7RUFDRSxtQkFBQTtFQUNBLG9CQUFBO0NoQndwQkg7QWlCNXFCRDtFbEJDRSwwSUFBQTtFa0JDQSxrQkFBQTtDakI4cUJEO0FrQi9xQkQ7RUFDRSxVQUFBO0VBQ0Esb0JBQUE7Q2xCaXJCRDtBa0IvcUJDO0VBQ0UsbUJBQUE7RUFDQSxPQUFBO0VBQ0EsU0FBQTtFQUNBLFVBQUE7RUFDQSxRQUFBO0VBRUEsbUJBQUE7Q2xCZ3JCSDtBa0I1cUJEO0VBQ0UsaUJBQUE7RUFDQSxxQ0FBQTtFQUNBLG1CQUFBO0VBQ0EsOEJBQUE7RUFDQSxZQUFBO0NsQjhxQkQ7QWtCNXFCQztFQUNFLG1CQUFBO0VBQ0EsYUFBQTtFQUNBLFNBQUE7RUFDQSxvQ0FBQTtFQUFBLDRCQUFBO0VBQ0Esa0JBQUE7Q2xCOHFCSDtBa0I1cUJDO0VBQ0UsaUNBQUE7Q2xCOHFCSDtBa0IzcUJDO0VBQ0UsaUJBQUE7RUFDQSxpQkFBQTtFQUNBLG9CQUFBO0NsQjZxQkg7QWtCM3FCRzs7RUFDRSxlQUFBO0NsQjhxQkw7QWtCNXFCRzs7RUFDRSxZQUFBO0NsQitxQkw7QWtCNXFCQzs7RW5CN0NBLDBJQUFBO0VtQitDRSxjQUFBO0VBQ0EsZUFBQTtFQUNBLDZCQUFBO0VBQ0EsaUJBQUE7Q2xCK3FCSDtBbUJodUJEO0VBQ0UsdUJBQUE7RUFDQSxZQUFBO0NuQmt1QkQ7QW1CaHVCQztFQUNFLGdCQUFBO0VBQ0EsT0FBQTtFQUNBLFVBQUE7RUFDQSxXQUFBO0VBQ0EsYUFBQTtFQUNBLHFDQUFBO0VBQ0Esa0NBQUE7Q25Ca3VCSDtBbUIvdEJDO0VBQ0UsMkNBQUE7RUFBQSxtQ0FBQTtDbkJpdUJIO0FNanZCaUU7RUFBQTtJYW1CNUQsa0RBQUE7SUFBQSwwQ0FBQTtHbkJrdUJIO0NBQ0Y7QU1sdkIwQztFQUFBO0lha0JyQyxrREFBQTtJQUFBLDBDQUFBO0duQm91Qkg7Q0FDRjtBbUJsdUJEO0VBQ0UsY0FBQTtDbkJvdUJEO0FtQmp1QkM7Ozs7RUFDRSxtQkFBQTtFQUNBLGFBQUE7RUFDQSxjQUFBO0NuQnN1Qkg7QW1CbnVCQzs7RUFDRSxVQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7RUFFQSw4QkFBQTtFQUNBLFlBQUE7RUFDQSxtQkFBQTtFQUNBLG9CQUFBO0VBQ0EsdUJBQUE7Q25CcXVCSDtBbUJudUJHOztFQUNFLFdBQUE7Q25Cc3VCTDtBbUJwdUJHOztFQUNFLGVBQUE7RUFDQSxzQkFBQTtDbkJ1dUJMO0FtQnJ1QkM7RUFDRSxZQUFBO0NuQnV1Qkg7QW1CcnVCRztFQUNFLGVBQUE7Q25CdXVCTDtBbUJydUJEO0VBQ0UsVUFBQTtFQUNBLFlBQUE7RUFDQSw4QkFBQTtFQUNBLGNBQUE7Q25CdXVCRDtBbUJydUJEO0VBQ0UsWUFBQTtFQUNBLE9BQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsWUFBQTtDbkJ1dUJEO0FtQnJ1QkM7RUFDRSxnQkFBQTtFQUNBLG1CQUFBO0VBQ0EsU0FBQTtFQUNBLFlBQUE7RUFDQSxvQ0FBQTtFQUFBLDRCQUFBO0VBQ0EsWUFBQTtFcEIvRUYsMElBQUE7RW9CaUZFLGtCQUFBO0NuQnV1Qkg7QW1CcHVCQztFQUNFLGVBQUE7Q25Cc3VCSDtBb0I1ekJEO0VBQ0UsY0FBQTtFQUNBLHVCQUFBO0VBQ0EsZ0JBQUE7RUFFQSxVQUFBO0VBQ0EsUUFBQTtFQUNBLFlBQUE7RUFDQSx1QkFBQTtFQUNBLCtCQUFBO0VBQ0EsWUFBQTtFQUNBLGdDQUFBO0NwQjZ6QkQ7QW9CdnpCQzs7RUFDRSxlQUFBO0VBQ0EsVUFBQTtDcEIwekJIO0FvQnh6QkM7RUFDRSxVQUFBO0VBQ0EsV0FBQTtFQUNBLGlCQUFBO0VBQ0EsWUFBQTtFQUNBLG1CQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtDcEIwekJIO0FvQnh6QnNFO0VBQUE7SUFDakUsa0JBQUE7R3BCMnpCSDtDQUNGO0FvQnp6Qkc7RUFDRSxvQkFBQTtFQUNBLG1CQUFBO0NwQjJ6Qkw7QW9CenpCRztFQUNFLGNBQUE7Q3BCMnpCTDtBb0J4ekJDO0VBQ0UsZUFBQTtDcEIwekJIO0FvQnh6QkM7RUFDRSxpQkFBQTtFQUNBLGNBQUE7RUFDQSxzQ0FBQTtDcEIwekJIO0FvQnZ6Qkc7RUFDRSxnQkFBQTtDcEJ5ekJMO0FvQnZ6Qkc7O0VBQ0UsZUFBQTtFQUNBLG1CQUFBO0VBQ0EsWUFBQTtFQUNBLG1DQUFBO0VBQUEsMkJBQUE7Q3BCMHpCTDtBb0J4ekJHO0VBQ0UsV0FBQTtDcEIwekJMO0FvQnZ6Qks7RUFDRSxjQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7RUFDQSxrQ0FBQTtFQUFBLDBCQUFBO0NwQnl6QlA7QW9CdHpCRztFQUNFLFlBQUE7RUFDQSxtQ0FBQTtFQUFBLDJCQUFBO0NwQnd6Qkw7QW9CdnpCSztFQUNFLHNCQUFBO0NwQnl6QlA7QW9CdnpCSztFQUNFLGVBQUE7RUFDQSxXQUFBO0VBQ0EsYUFBQTtFQUNBLGtDQUFBO0VBQUEsMEJBQUE7Q3BCeXpCUDtBb0J0ekJHO0VBQ0Usa0JBQUE7RUFDQSxxQ0FBQTtDcEJ3ekJMO0FxQjk0QkQ7RUFDRSxtQkFBQTtFQUNBLGlCQUFBO0NyQmc1QkQ7QXFCOTRCQztFQUNFLGlCQUFBO0VBQ0EsYUFBQTtFQUNBLGNBQUE7RUFDQSxnQkFBQTtDckJnNUJIO0FzQng1QkQ7RUFDRSxtQkFBQTtDdEIwNUJEO0FzQng1QkQ7RUFDRSxtQkFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7Q3RCMDVCRDtBdUJ6NUJEO0VBQ0UsY0FBQTtFQUNBLHVDQUFBO0VBQUEsK0JBQUE7Q3ZCMjVCRDtBTW42QmlFO0VBQUE7SWlCVzlELGtCQUFBO0d2QjQ1QkQ7Q0FDRjtBTXA2QjBDO0VBQUE7SWlCVXZDLDJCQUFBO0d2Qjg1QkQ7Q0FDRjtBdUI1NUJEO0VBRUUsa0JBQUE7RUFDQSxxQkFBQTtFQUNBLG1CQUFBO0N2QjY1QkQ7QXVCejVCSzs7O0VBekJKLGdCQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0Esc0JBQUE7Q3ZCdTdCRDtBdUI5NUJHO0VBNUJGLGdCQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0Esc0JBQUE7Q3ZCNjdCRDtBdUJqNkJEO0V4Qi9CRSwwSUFBQTtFd0JpQ0EsY0FBQTtDdkJtNkJEO0F1Qmg2QkQ7OztFeEJwQ0UsMElBQUE7RXdCc0NBLGtCQUFBO0VBQ0EsaUJBQUE7RUFDQSxvQkFBQTtDdkJvNkJEO0FNLzdCeUM7RUFBQTs7O0lpQjhCdEMsa0JBQUE7R3ZCdTZCRDtDQUNGO0F1QnQ2QkQ7O0VBQ0UsMEJBQUE7Q3ZCeTZCRDtBdUJ2NkJEO0VBQ0UsZUFBQTtFQUNBLGVBQUE7Q3ZCeTZCRDtBd0J2OUJEO0VBQ0UsY0FBQTtDeEJ5OUJEO0FNOTlCaUU7RUFBQTtJa0JROUQsa0JBQUE7R3hCMDlCRDtDQUNGO0FNLzlCMEM7RUFBQTtJa0JPdkMsMkJBQUE7R3hCNDlCRDtDQUNGO0F3QjE5QkM7RUFDRSxlQUFBO0N4QjQ5Qkg7QXlCNStCRDtFQUNFLGVBQUE7RUFDQSxlQUFBO0N6QjgrQkQ7QXlCNStCRDtFQUNFLDBCQUFBO0VBQ0EsZUFBQTtFQUNBLGNBQUE7RUFDQSxzQkFBQTtFQUNBLG9CQUFBO0VBQ0EscUJBQUE7Q3pCOCtCRDtBeUI1K0JDO0VBQ0UsMEJBQUE7Q3pCOCtCSDtBMEIxL0JDO0VBQ0UscUJBQUE7RUFDQSxvQkFBQTtFQUNBLGNBQUE7RUFFQSxtQkFBQTtFQUVBLDBCQUFBO0VBQ0EsWUFBQTtFQUNBLHFCQUFBO0VBQ0EsMEJBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0MxQjAvQkg7QTBCdi9CQzs7RUFDRSxTQUFBO0VBQ0Esb0NBQUE7RUFBQSw0QkFBQTtDMUIwL0JIO0EwQngvQkM7RUFDRSxZQUFBO0MxQjAvQkg7QTBCeC9CQztFQUNFLFdBQUE7QzFCMC9CSDtBMEJ2L0JDOztFQUNFLFVBQUE7RUFDQSxvQ0FBQTtFQUFBLDRCQUFBO0MxQjAvQkg7QTBCeC9CQztFQUNFLFVBQUE7QzFCMC9CSDtBMEJ4L0JDO0VBQ0UsYUFBQTtDMUIwL0JIO0FGbGhDRDtFQUNFLGlDQUFBO0NFb2hDRDtBRm5oQ0Q7RUFDRSxrQkFBQTtDRXFoQ0Q7QUZuaENEOztFQUNFLGlCQUFBO0VBQ0Esb0JBQUE7RUFDQSxtQkFBQTtFQUNBLGlCQUFBO0NFc2hDRDtBRmhoQ0Q7RUFDRSxjQUFBO0VBQ0EsdUNBQUE7RUFBQSwrQkFBQTtDRWtoQ0Q7QUZoaENDO0VBQ0Usb0JBQUE7Q0VraENIO0FGaGhDQztFQUNFLFdBQUE7RUFDQSxjQUFBO0VBQ0Esc0JBQUE7Q0VraENIO0FGaGhDQztFQUNFLGtCQUFBO0NFa2hDSCIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgdXJsKFwiaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PU1vbnRzZXJyYXR8TGF0bzoxMDAsMzAwLDQwMCw0MDBpdGFsaWMsMzAwaXRhbGljLDcwMGl0YWxpY3xQYWNpZmljb1wiKTtcbkBpbXBvcnQgdXJsKFwiLy9tYXhjZG4uYm9vdHN0cmFwY2RuLmNvbS9mb250LWF3ZXNvbWUvNC41LjAvY3NzL2ZvbnQtYXdlc29tZS5taW4uY3NzXCIpO1xuXG5AcmVxdWlyZSBcImdsb2JhbHMvX21xaGVscGVyXCJcbkByZXF1aXJlIFwiZ2xvYmFscy9fY29sb3JzX3NlbWFudGljXCJcbkByZXF1aXJlIFwiZ2xvYmFscy9fdHlwb2dyYXBoeVwiXG5AcmVxdWlyZSBcImdsb2JhbHMvX2FuaW1hdGlvbnNcIlxuQHJlcXVpcmUgXCJnbG9iYWxzL19kZWZhdWx0c1wiXG5cbkByZXF1aXJlIFwiY29tcG9uZW50cy8qKi9bXl9dKi5zdHlsXCJcblxucHJlW2NsYXNzKj1cImxhbmd1YWdlLVwiXVxuICBwYWRkaW5nIC41cmVtIDFyZW0gLjdyZW0gMXJlbVxuY29kZVxuICBmb250LXNpemUgLjZyZW1cblxuOm5vdChwcmUpID4gY29kZVtjbGFzcyo9XCJsYW5ndWFnZS1cIl0sIHByZVtjbGFzcyo9XCJsYW5ndWFnZS1cIl1cbiAgYmFja2dyb3VuZCAjZmZmXG4gIG1hcmdpbi1yaWdodCAtMXJlbVxuICBtYXJnaW4tbGVmdCAtMXJlbVxuICBsaW5lLWhlaWdodCAuOFxuXG5cbiAgLy8gYmFja2dyb3VuZCB0cmFuc3BhcmVudFxuXG5cbi5zdGF0aWMtdmlld1xuICBwYWRkaW5nIDFyZW1cbiAgYW5pbWF0aW9uOiBwdWxzZSAwLjJzIGxpbmVhciAxO1xuXG4gIGgzXG4gICAgbWFyZ2luLWJvdHRvbSAxcmVtXG5cbiAgcFxuICAgIHBhZGRpbmcgMFxuICAgIG1hcmdpbi10b3AgMFxuICAgIG1hcmdpbi1ib3R0b20gLjVyZW1cblxuICBzdHJvbmdcbiAgICBmb250LXdlaWdodCBib2xkXG4iLCJmdC1tb250c2VycmF0KClcbiAgZm9udC1mYW1pbHkgJ01vbnRzZXJyYXQnLCBcIkhlbHZldGljYU5ldWUtTGlnaHRcIiwgXCJIZWx2ZXRpY2EgTmV1ZSBMaWdodFwiLCBcIkhlbHZldGljYSBOZXVlXCIsIEhlbHZldGljYSwgQXJpYWwsIFwiTHVjaWRhIEdyYW5kZVwiLCBzYW5zLXNlcmlmXG5cbmZ0LWJyYW5kKClcbiAgZm9udC1mYW1pbHk6ICdQYWNpZmljbycsIGN1cnNpdmU7XG5cbmZ0LWxhdG8oKVxuICBmb250LWZhbWlseSAnTGF0bycsIHNlcmlmXG5cbi8vIGZ0LWxvcmEoKVxuLy8gICBmb250LWZhbWlseSAnTG9yYScsIHNlcmlmXG5cbmZ0LWJhc2UoKVxuICBmdC1sYXRvKClcblxuZnQtcHJpbWFyeSgpXG4gIGZ0LW1vbnRzZXJyYXQoKVxuXG4uZmFcbiAgZm9udC1zaXplIC44cmVtXG4gIHBvc2l0aW9uIHJlbGF0aXZlXG5cbiAgJi5mYS10d2l0dGVyXG4gICAgY29sb3IgdHdpdHRlci1ibHVlXG4gICAgdHJhbnNmb3JtIHRyYW5zbGF0ZVkoMTUlKVxuXG4gICYuZmEtZ2l0aHViLWFsdFxuICAgIHRyYW5zZm9ybSB0cmFuc2xhdGVZKDEwJSlcbiIsIkBpbXBvcnQgdXJsKFwiaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PU1vbnRzZXJyYXR8TGF0bzoxMDAsMzAwLDQwMCw0MDBpdGFsaWMsMzAwaXRhbGljLDcwMGl0YWxpY3xQYWNpZmljb1wiKTtcbkBpbXBvcnQgdXJsKFwiLy9tYXhjZG4uYm9vdHN0cmFwY2RuLmNvbS9mb250LWF3ZXNvbWUvNC41LjAvY3NzL2ZvbnQtYXdlc29tZS5taW4uY3NzXCIpO1xuLmZhIHtcbiAgZm9udC1zaXplOiAwLjhyZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi5mYS5mYS10d2l0dGVyIHtcbiAgY29sb3I6ICM0MDk5ZmY7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxNSUpO1xufVxuLmZhLmZhLWdpdGh1Yi1hbHQge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMTAlKTtcbn1cbkAtbW96LWtleWZyYW1lcyBwdWxzZSB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xuICB9XG4gIDUwJSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjA1KTtcbiAgfVxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xuICB9XG59XG5ALXdlYmtpdC1rZXlmcmFtZXMgcHVsc2Uge1xuICAwJSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgfVxuICA1MCUge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wNSk7XG4gIH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgfVxufVxuQC1vLWtleWZyYW1lcyBwdWxzZSB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xuICB9XG4gIDUwJSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjA1KTtcbiAgfVxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xuICB9XG59XG5Aa2V5ZnJhbWVzIHB1bHNlIHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XG4gIH1cbiAgNTAlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMDUpO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XG4gIH1cbn1cbkAtbW96LWtleWZyYW1lcyBuYXYtc2xpZGUge1xuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKTtcbiAgfVxuICA1MCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgfVxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xuICB9XG59XG5ALXdlYmtpdC1rZXlmcmFtZXMgbmF2LXNsaWRlIHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7XG4gIH1cbiAgNTAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gIH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTtcbiAgfVxufVxuQC1vLWtleWZyYW1lcyBuYXYtc2xpZGUge1xuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKTtcbiAgfVxuICA1MCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgfVxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xuICB9XG59XG5Aa2V5ZnJhbWVzIG5hdi1zbGlkZSB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpO1xuICB9XG4gIDUwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7XG4gIH1cbn1cbkAtbW96LWtleWZyYW1lcyBuYXYtc2xpZGUtdGFibGV0IHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7XG4gIH1cbiAgNTAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTMwJSk7XG4gIH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC02MCUpO1xuICB9XG59XG5ALXdlYmtpdC1rZXlmcmFtZXMgbmF2LXNsaWRlLXRhYmxldCB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpO1xuICB9XG4gIDUwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zMCUpO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNjAlKTtcbiAgfVxufVxuQC1vLWtleWZyYW1lcyBuYXYtc2xpZGUtdGFibGV0IHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7XG4gIH1cbiAgNTAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTMwJSk7XG4gIH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC02MCUpO1xuICB9XG59XG5Aa2V5ZnJhbWVzIG5hdi1zbGlkZS10YWJsZXQge1xuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKTtcbiAgfVxuICA1MCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzAlKTtcbiAgfVxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTYwJSk7XG4gIH1cbn1cbmh0bWwsXG5ib2R5LFxuZGl2LFxuc3BhbixcbmFwcGxldCxcbm9iamVjdCxcbmlmcmFtZSxcbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNixcbnAsXG5ibG9ja3F1b3RlLFxucHJlLFxuYSxcbmFiYnIsXG5hY3JvbnltLFxuYWRkcmVzcyxcbmJpZyxcbmNpdGUsXG5jb2RlLFxuZGVsLFxuZGZuLFxuZW0sXG5pbWcsXG5pbnMsXG5rYmQsXG5xLFxucyxcbnNhbXAsXG5zbWFsbCxcbnN0cmlrZSxcbnN0cm9uZyxcbnN1YixcbnN1cCxcbnR0LFxudmFyLFxuYixcbnUsXG5pLFxuY2VudGVyLFxuZGwsXG5kdCxcbmRkLFxub2wsXG51bCxcbmxpLFxuZmllbGRzZXQsXG5mb3JtLFxubGFiZWwsXG5sZWdlbmQsXG50YWJsZSxcbmNhcHRpb24sXG50Ym9keSxcbnRmb290LFxudGhlYWQsXG50cixcbnRoLFxudGQsXG5hcnRpY2xlLFxuYXNpZGUsXG5jYW52YXMsXG5kZXRhaWxzLFxuZW1iZWQsXG5maWd1cmUsXG5maWdjYXB0aW9uLFxuZm9vdGVyLFxuaGVhZGVyLFxuaGdyb3VwLFxubWVudSxcbm5hdixcbm91dHB1dCxcbnJ1YnksXG5zZWN0aW9uLFxuc3VtbWFyeSxcbnRpbWUsXG5tYXJrLFxuYXVkaW8sXG52aWRlbyB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwO1xuICBmb250LXNpemU6IDEwMCU7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxuaGdyb3VwLFxubWVudSxcbm5hdixcbnNlY3Rpb24ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbmJvZHkge1xuICBsaW5lLWhlaWdodDogMTtcbn1cbm9sLFxudWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuYmxvY2txdW90ZSxcbnEge1xuICBxdW90ZXM6IG5vbmU7XG59XG5ibG9ja3F1b3RlOmJlZm9yZSxcbmJsb2NrcXVvdGU6YWZ0ZXIsXG5xOmJlZm9yZSxcbnE6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgY29udGVudDogbm9uZTtcbn1cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG59XG4vKiBUeXBlYmFzZS5sZXNzIHYwLjEuMCB8IE1JVCBMaWNlbnNlICovXG5odG1sIHtcbi8qIENoYW5nZSBkZWZhdWx0IHR5cGVmYWNlcyBoZXJlICovXG4gIGZvbnQtZmFtaWx5OiBzZXJpZjtcbiAgZm9udC1zaXplOiAxMzcuNSU7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xufVxucCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjVyZW07XG4gIG1hcmdpbi10b3A6IDEuNXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbnVsLFxub2wge1xuICBtYXJnaW4tdG9wOiAxLjVyZW07XG4gIG1hcmdpbi1ib3R0b206IDEuNXJlbTtcbn1cbnVsIGxpLFxub2wgbGkge1xuICBsaW5lLWhlaWdodDogMS41cmVtO1xufVxudWwgdWwsXG5vbCB1bCxcbnVsIG9sLFxub2wgb2wge1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuYmxvY2txdW90ZSB7XG4gIGxpbmUtaGVpZ2h0OiAxLjVyZW07XG4gIG1hcmdpbi10b3A6IDEuNXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMS41cmVtO1xufVxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbi8qIENoYW5nZSBoZWFkaW5nIHR5cGVmYWNlcyBoZXJlICovXG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICBtYXJnaW4tdG9wOiAxLjVyZW07XG4gIG1hcmdpbi1ib3R0b206IDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjVyZW07XG59XG5oMSB7XG4gIGZvbnQtc2l6ZTogNC4yNDJyZW07XG4gIGxpbmUtaGVpZ2h0OiA0LjVyZW07XG4gIG1hcmdpbi10b3A6IDNyZW07XG59XG5oMiB7XG4gIGZvbnQtc2l6ZTogMi44MjhyZW07XG4gIGxpbmUtaGVpZ2h0OiAzcmVtO1xuICBtYXJnaW4tdG9wOiAzcmVtO1xufVxuaDMge1xuICBmb250LXNpemU6IDEuNDE0cmVtO1xufVxuaDQge1xuICBmb250LXNpemU6IDAuNzA3cmVtO1xufVxuaDUge1xuICBmb250LXNpemU6IDAuNDcxMzMzMzMzMzMzMzMzcmVtO1xufVxuaDYge1xuICBmb250LXNpemU6IDAuMzUzNXJlbTtcbn1cbnRhYmxlIHtcbiAgbWFyZ2luLXRvcDogMS41cmVtO1xuICBib3JkZXItc3BhY2luZzogMHB4O1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xufVxudGFibGUgdGQsXG50YWJsZSB0aCB7XG4gIHBhZGRpbmc6IDA7XG4gIGxpbmUtaGVpZ2h0OiAzM3B4O1xufVxuY29kZSB7XG4gIHZlcnRpY2FsLWFsaWduOiBib3R0b207XG59XG4ubGVhZCB7XG4gIGZvbnQtc2l6ZTogMS40MTRyZW07XG59XG4uaHVnIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cbioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogMTUwJTtcbn1cbi5ybGIge1xuICBiYWNrZ3JvdW5kOiAjZjZmN2Y5O1xufVxuLnJsYiB7XG4gIGZvbnQtZmFtaWx5OiBcIkhlbHZldGljYU5ldWUtTGlnaHRcIiwgXCJIZWx2ZXRpY2EgTmV1ZSBMaWdodFwiLCBcIkhlbHZldGljYSBOZXVlXCIsIEhlbHZldGljYSwgQXJpYWwsIFwiTHVjaWRhIEdyYW5kZVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogMzAwO1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG59XG4ucmxiIHAge1xuICBmb250LWZhbWlseTogJ0xhdG8nLCBzZXJpZjtcbiAgZm9udC1zaXplOiAwLjhyZW07XG59XG4ucmxiIGVtIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6ICMwMDA7XG59XG5hOmhvdmVyIHtcbiAgY29sb3I6ICNmZTQ1ODY7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuYTphY3RpdmUge1xuICBjb2xvcjogI2U4Mzk3Njtcbn1cbmEgLmhpZ2hsaWdodCB7XG4gIGNvbG9yOiAjZjAwO1xufVxuLmJyYW5kIHtcbiAgZm9udC1mYW1pbHk6ICdQYWNpZmljbycsIGN1cnNpdmU7XG4gIGZvbnQtc2l6ZTogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgd2lkdGg6IDNyZW07XG4gIGhlaWdodDogM3JlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLmpzIC5icmFuZCB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgbGVmdDogMDtcbiAgei1pbmRleDogNTAwO1xufVxuLmJyYW5kIC5icmFuZC1zdWJsaW5lIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5icmFuZCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgY29sb3I6ICMwMDA7XG4gICAgd2lkdGg6IDM1JTtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgZm9udC1zaXplOiAxLjNyZW07XG4gICAgZm9udC1zaXplOiAzdnc7XG4gICAgdG9wOiA1cmVtO1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICB9XG4gIC5icmFuZCAuYnJhbmQtc3VibGluZSB7XG4gICAgbWFyZ2luLXRvcDogMS4ycmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gICAgZm9udC1mYW1pbHk6ICdMYXRvJywgc2VyaWY7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiAwLjlyZW07XG4gICAgZm9udC13ZWlnaHQ6IDEwMDtcbiAgfVxufVxuLmJyYW5kOmJlZm9yZSB7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBjb250ZW50OiAnUmQnO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuYnJhbmQ6YmVmb3JlIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG4ucmxiIC5idG4ge1xuICBwYWRkaW5nOiAwLjVyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC13ZWlnaHQ6IDEwMDtcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcbn1cbi5ybGIgLmJ0bi1wcmltYXJ5IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgY29sb3I6ICMwMDA7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG4ucmxiIC5idG4tcHJpbWFyeTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZTQ1ODY7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG4uYnRuIHtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuLnJsYiAucmxiLWZvb3RlciAuYXV0aG9yLWluZm9ybWF0aW9uIHtcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0JywgXCJIZWx2ZXRpY2FOZXVlLUxpZ2h0XCIsIFwiSGVsdmV0aWNhIE5ldWUgTGlnaHRcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBIZWx2ZXRpY2EsIEFyaWFsLCBcIkx1Y2lkYSBHcmFuZGVcIiwgc2Fucy1zZXJpZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nOiAzcmVtIDFyZW07XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAucmxiIC5ybGItZm9vdGVyIC5hdXRob3ItaW5mb3JtYXRpb24ge1xuICAgIHBhZGRpbmc6IDhyZW0gMXJlbTtcbiAgfVxufVxuLnJsYiAucmxiLWZvb3RlciAuYXV0aG9yLWluZm9ybWF0aW9uIGEge1xuICBmb250LXNpemU6IDAuNnJlbTtcbn1cbi5ybGIgLnJsYi1mb290ZXIgLmF1dGhvci1pbmZvcm1hdGlvbiAuYXV0aG9yLXN1YmxpbmUge1xuICBwYWRkaW5nLXRvcDogMC41cmVtO1xuICBmb250LXNpemU6IDAuNnJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbn1cbi5zb2NpYWwtbmV0d29ya3MgPiAqIHtcbiAgcGFkZGluZy10b3A6IDAuNXJlbTtcbn1cbi5hdXRob3ItYXZhdGFyIHtcbiAgbWFyZ2luLWJvdHRvbTogMC41cmVtO1xufVxuLmF1dGhvci1hdmF0YXIgaW1nIHtcbiAgbWF4LXdpZHRoOiAzMCU7XG4gIGJvcmRlci1yYWRpdXM6IDEwMCU7XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDcwMHB4KSB7XG4gIC5hdXRob3ItYXZhdGFyIGltZyB7XG4gICAgbWF4LXdpZHRoOiAyMDBweDtcbiAgfVxufVxuLnJsYiAucmxiLWZvb3RlciAuY29weS1yaWdodC1ub3RpY2Uge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDBiZGZmO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nOiAycmVtIDFyZW07XG4gIHBhZGRpbmctYm90dG9tOiA2cmVtO1xufVxuLnJsYiAucmxiLWZvb3RlciAuY29weS1yaWdodC1ub3RpY2UgLmNvcHlyaWdodC1oaW50IHtcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0JywgXCJIZWx2ZXRpY2FOZXVlLUxpZ2h0XCIsIFwiSGVsdmV0aWNhIE5ldWUgTGlnaHRcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBIZWx2ZXRpY2EsIEFyaWFsLCBcIkx1Y2lkYSBHcmFuZGVcIiwgc2Fucy1zZXJpZjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1zaXplOiAwLjZyZW07XG4gIGxldHRlci1zcGFjaW5nOiAxcHg7XG59XG4ucmxiIC5ybGItZm9vdGVyIC5pbXByZXNzdW0tbGluayB7XG4gIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIFwiSGVsdmV0aWNhTmV1ZS1MaWdodFwiLCBcIkhlbHZldGljYSBOZXVlIExpZ2h0XCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgSGVsdmV0aWNhLCBBcmlhbCwgXCJMdWNpZGEgR3JhbmRlXCIsIHNhbnMtc2VyaWY7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtc2l6ZTogMC42cmVtO1xuICBsZXR0ZXItc3BhY2luZzogMXB4O1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2ZmZjtcbiAgcGFkZGluZy1ib3R0b206IDFyZW07XG59XG4ucmxiIC5ybGItZm9vdGVyIC5pbXByZXNzdW0tbGluayBhIHtcbiAgY29sb3I6ICNmZmY7XG59XG4ucmxiIC5ybGItZm9vdGVyIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi5ybGIgLmhlYWRsaW5lLXByaW1hcnkge1xuICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnLCBcIkhlbHZldGljYU5ldWUtTGlnaHRcIiwgXCJIZWx2ZXRpY2EgTmV1ZSBMaWdodFwiLCBcIkhlbHZldGljYSBOZXVlXCIsIEhlbHZldGljYSwgQXJpYWwsIFwiTHVjaWRhIEdyYW5kZVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDVlbTtcbiAgZm9udC1zaXplOiA2dnc7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGxpbmUtaGVpZ2h0OiAxLjM7XG4gIG1hcmdpbi10b3A6IDAuNXJlbTtcbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzAwcHgpIHtcbiAgLnJsYiAuaGVhZGxpbmUtcHJpbWFyeSB7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICB9XG59XG4ucmxiIC5oZWFkbGluZS1zdWIge1xuICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnLCBcIkhlbHZldGljYU5ldWUtTGlnaHRcIiwgXCJIZWx2ZXRpY2EgTmV1ZSBMaWdodFwiLCBcIkhlbHZldGljYSBOZXVlXCIsIEhlbHZldGljYSwgQXJpYWwsIFwiTHVjaWRhIEdyYW5kZVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDEuMXJlbTtcbiAgZm9udC1zaXplOiA0LjV2dztcbiAgbGluZS1oZWlnaHQ6IDEuMTtcbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzAwcHgpIHtcbiAgLnJsYiAuaGVhZGxpbmUtc3ViIHtcbiAgICBmb250LXNpemU6IDEuMXJlbTtcbiAgfVxufVxuLnJsYiAuaGVyby1iYW5uZXItY29udGVudCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNmY3Zjk7XG59XG4ucmxiIC5oZXJvLWJhbm5lciB7XG4gIGJhY2tncm91bmQtY29sb3I6IGhlcm8tYmFubmVyLWJnO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3MDBweCkge1xuICAucmxiIC5oZXJvLWJhbm5lciB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG59XG4ucmxiIC5oZXJvLWJhbm5lciAuaGVyby1iYW5uZXItbWVzc2FnZSB7XG4gIHBhZGRpbmc6IDFyZW07XG59XG4ucmxiIC5oZXJvLWJhbm5lciAuaGVyby1iYW5uZXItbWVzc2FnZSAuaGVhZGxpbmUtc3ViLFxuLnJsYiAuaGVyby1iYW5uZXIgLmhlcm8tYmFubmVyLW1lc3NhZ2UgLmhlYWRsaW5lLXByaW1hcnkge1xuICBjb2xvcjogI2ZmZjtcbn1cbi5ybGIgLmhlcm8tYmFubmVyIC5oZXJvLWJhbm5lci1tZXNzYWdlIC5oZXJvLWJhbm5lci1jYWxsMmFjdGlvbiB7XG4gIG1hcmdpbi10b3A6IDJyZW07XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDcwMHB4KSB7XG4gIC5ybGIgLmhlcm8tYmFubmVyIC5oZXJvLWJhbm5lci1tZXNzYWdlIC5oZXJvLWJhbm5lci1jYWxsMmFjdGlvbiB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHBhZGRpbmc6IDAuOHJlbSA0cmVtO1xuICB9XG59XG4ubm8tanMgLnJsYiAuaGVyby1iYW5uZXItcGFnZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogY29sdW1uO1xufVxuLm5vLWpzIC5ybGIgLmhlcm8tYmFubmVyLXBhZ2UgLmhlcm8tYmFubmVyIHtcbiAgb3JkZXI6IC0xO1xuICBtYXJnaW4tYm90dG9tOiAzcmVtO1xufVxuLm5vLWpzIC5ybGIgLmhlcm8tYmFubmVyLXBhZ2UgLmJyYW5kLmluLWhlcm8tYmFubmVyIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5qcyAucmxiIC5oZXJvLWJhbm5lciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICB6LWluZGV4OiAtMTtcbn1cbi5qcyAucmxiIC5oZXJvLWJhbm5lciAuaGVyby1iYW5uZXItbWVzc2FnZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogNSU7XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDcwMHB4KSBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gIC5qcyAucmxiIC5oZXJvLWJhbm5lciAuaGVyby1iYW5uZXItbWVzc2FnZSB7XG4gICAgbGVmdDogMTAlO1xuICAgIHJpZ2h0OiAxMCU7XG4gIH1cbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5qcyAucmxiIC5oZXJvLWJhbm5lciAuaGVyby1iYW5uZXItbWVzc2FnZSB7XG4gICAgbGVmdDogMTAlO1xuICAgIHJpZ2h0OiAxMCU7XG4gIH1cbn1cbi5qcyAucmxiIC5oZXJvLWJhbm5lciAuaGVyby1iYW5uZXItbWVzc2FnZSAuaGVhZGxpbmUtcHJpbWFyeSB7XG4gIGZvbnQtc2l6ZTogMnZ3O1xufVxuQG1lZGlhICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAzKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIHtcbiAgLmpzIC5ybGIgLmhlcm8tYmFubmVyIC5oZXJvLWJhbm5lci1tZXNzYWdlIC5oZWFkbGluZS1wcmltYXJ5IHtcbiAgICBmb250LXNpemU6IDV2dztcbiAgfVxufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3MDBweCkgYW5kIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAuanMgLnJsYiAuaGVyby1iYW5uZXIgLmhlcm8tYmFubmVyLW1lc3NhZ2UgLmhlYWRsaW5lLXByaW1hcnkge1xuICAgIGZvbnQtc2l6ZTogNXZ3O1xuICB9XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuanMgLnJsYiAuaGVyby1iYW5uZXIgLmJyYW5kLmluLWhlcm8tYmFubmVyIHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICB0b3A6IDFyZW07XG4gICAgbGVmdDogMXJlbTtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICB9XG4gIC5qcyAucmxiIC5oZXJvLWJhbm5lciAuYnJhbmQuaW4taGVyby1iYW5uZXIgLmJyYW5kLXN1YmxpbmUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cbi5qcyAucmxiIC5oZXJvLWJhbm5lci1wYWdlID4gKjpmaXJzdC1jaGlsZCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4uanMgLnJsYiAuaGVyby1iYW5uZXItcGFnZSA+ICo6bGFzdC1jaGlsZCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuLmpzIC5ybGIgLmhlcm8tYmFubmVyLXBhZ2UgPiAqOnRhcmdldCxcbi5qcyAucmxiIC5oZXJvLWJhbm5lci1wYWdlID4gLnNlbGVjdGVkLXRhcmdldCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBhbmltYXRpb246IHB1bHNlIDAuMnMgbGluZWFyIDE7XG59XG4uanMgLnJsYiAuaGVyby1iYW5uZXItcGFnZSA+ICo6dGFyZ2V0IH4gKixcbi5qcyAucmxiIC5oZXJvLWJhbm5lci1wYWdlID4gLnNlbGVjdGVkLXRhcmdldCB+ICoge1xuICBkaXNwbGF5OiBub25lO1xufVxuLm1hcmtkb3duLWNvbnRhaW5lciBoMSxcbi5tYXJrZG93bi1jb250YWluZXIgaDIsXG4ubWFya2Rvd24tY29udGFpbmVyIGgzLFxuLm1hcmtkb3duLWNvbnRhaW5lciBoNCxcbi5tYXJrZG93bi1jb250YWluZXIgaDUsXG4ubWFya2Rvd24tY29udGFpbmVyIGg2IHtcbiAgbWFyZ2luLXRvcDogMS41ZW07XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG4ubWFya2Rvd24tY29udGFpbmVyIGgxIHtcbiAgZm9udC1zaXplOiAxLjgyOHJlbTtcbiAgbGluZS1oZWlnaHQ6IDJyZW07XG59XG4ubWFya2Rvd24tY29udGFpbmVyIGgyIHtcbiAgZm9udC1zaXplOiAxLjQxNHJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNXJlbTtcbn1cbi5tYXJrZG93bi1jb250YWluZXIgaDMge1xuICBmb250LXNpemU6IDEuMTA3cmVtO1xuICBsaW5lLWhlaWdodDogMS4ycmVtO1xufVxuLm1hcmtkb3duLWNvbnRhaW5lciBoNCxcbi5tYXJrZG93bi1jb250YWluZXIgaDUsXG4ubWFya2Rvd24tY29udGFpbmVyIGg2IHtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBsaW5lLWhlaWdodDogMS4ycmVtO1xufVxuLm1hcmtkb3duLWNvbnRhaW5lciBwIHtcbiAgbWFyZ2luLXRvcDogMC41cmVtO1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xufVxuLm5hdi1saW5rIHtcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0JywgXCJIZWx2ZXRpY2FOZXVlLUxpZ2h0XCIsIFwiSGVsdmV0aWNhIE5ldWUgTGlnaHRcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBIZWx2ZXRpY2EsIEFyaWFsLCBcIkx1Y2lkYSBHcmFuZGVcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAwLjZyZW07XG59XG4ubmF2LWxpc3Qge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDNyZW0gMCAwIDA7XG59XG4uanMgLm5hdi1saXN0IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbn1cbi5uYXYtaXRlbSB7XG4gIGxpbmUtaGVpZ2h0OiAxLjM7XG4gIHBhZGRpbmc6IDAuNXJlbSAwLjVyZW0gMC41cmVtIDEuNXJlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2U2ZTZlNjtcbiAgd2lkdGg6IDEwMCU7XG59XG4ubmF2LWl0ZW06YmVmb3JlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwLjVyZW07XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gIGZvbnQtc2l6ZTogMC42cmVtO1xufVxuLm5hdi1pdGVtOmxhc3Qtb2YtdHlwZSB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTZlNmU2O1xufVxuLm5hdi1pdGVtLmltcHJlc3N1bSB7XG4gIG1hcmdpbi10b3A6IDNyZW07XG4gIGJvcmRlci10b3A6IG5vbmU7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG59XG4ubmF2LWl0ZW0uaW1wcmVzc3VtIGEsXG4ubmF2LWl0ZW0uaW1wcmVzc3VtOmJlZm9yZSB7XG4gIGNvbG9yOiAjYjNiM2IzO1xufVxuLm5hdi1pdGVtLmltcHJlc3N1bTpob3ZlciBhLFxuLm5hdi1pdGVtLmltcHJlc3N1bTpob3ZlcjpiZWZvcmUge1xuICBjb2xvcjogIzAwMDtcbn1cbi5uYXYtaXRlbSAucG9zdC1uYXYtbWV0YSxcbi5uYXYtaXRlbSAucG9zdC1uYXYtbWV0YSBzcGFuIHtcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0JywgXCJIZWx2ZXRpY2FOZXVlLUxpZ2h0XCIsIFwiSGVsdmV0aWNhIE5ldWUgTGlnaHRcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBIZWx2ZXRpY2EsIEFyaWFsLCBcIkx1Y2lkYSBHcmFuZGVcIiwgc2Fucy1zZXJpZjtcbiAgbWFyZ2luLXRvcDogMDtcbiAgY29sb3I6ICM5ZTllOWU7XG4gIGZvbnQtc2l6ZTogMC41cmVtICFpbXBvcnRhbnQ7XG4gIGZvbnQtd2VpZ2h0OiAxMDA7XG59XG4ubmF2IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgd2lkdGg6IDEwMCU7XG59XG4uanMgLm5hdiB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDEwMCU7XG4gIHotaW5kZXg6IDk5OTtcbiAgLXdlYmtpdC10cmFuc2Zvcm0tc3R5bGU6IHByZXNlcnZlLTNkO1xuICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XG59XG4ubmF2LmFjdGl2ZSB7XG4gIGFuaW1hdGlvbjogbmF2LXNsaWRlIDAuMnMgZm9yd2FyZHM7XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDcwMHB4KSBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gIC5uYXYuYWN0aXZlIHtcbiAgICBhbmltYXRpb246IG5hdi1zbGlkZS10YWJsZXQgMC4ycyBmb3J3YXJkcztcbiAgfVxufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLm5hdi5hY3RpdmUge1xuICAgIGFuaW1hdGlvbjogbmF2LXNsaWRlLXRhYmxldCAwLjJzIGZvcndhcmRzO1xuICB9XG59XG4ubmF2LWNsb3NlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5qcyAubmF2LWNsb3NlLFxuLmpzIC5uYXYtdG9nZ2xlLFxuLmpzIC5uYXYtcnNzLFxuLmpzIC5uYXYtdHdpdHRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm9yZGVyOiBub25lO1xuICBvdXRsaW5lOiBub25lO1xufVxuLm5hdiAubmF2LXJzcyxcbi5uYXYgLm5hdi10d2l0dGVyIHtcbiAgdG9wOiAzcmVtO1xuICB3aWR0aDogM3JlbTtcbiAgcmlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nLXRvcDogMS41cmVtO1xuICBwYWRkaW5nLWJvdHRvbTogMC41cmVtO1xufVxuLm5hdiAubmF2LXJzcy50b29sdGlwOmhvdmVyOmFmdGVyLFxuLm5hdiAubmF2LXR3aXR0ZXIudG9vbHRpcDpob3ZlcjphZnRlciB7XG4gIHJpZ2h0OiA4MCU7XG59XG4ubmF2IC5uYXYtcnNzOmhvdmVyLFxuLm5hdiAubmF2LXR3aXR0ZXI6aG92ZXIge1xuICBjb2xvcjogI2ZlNDU4NjtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuLm5hdiAubmF2LXR3aXR0ZXIge1xuICB0b3A6IDQuNXJlbTtcbn1cbi5uYXYgLm5hdi10d2l0dGVyOmhvdmVyIHtcbiAgY29sb3I6ICM0MDk5ZmY7XG59XG4ubmF2LWNsb3NlIHtcbiAgdG9wOiAxcmVtO1xuICByaWdodDogMXJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIHotaW5kZXg6IDEwMDE7XG59XG4ubmF2LXRvZ2dsZSB7XG4gIHJpZ2h0OiAxMDAlO1xuICB0b3A6IDA7XG4gIHdpZHRoOiAzcmVtO1xuICBoZWlnaHQ6IDNyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGNvbG9yOiAjMDAwO1xufVxuLm5hdi10b2dnbGU6YWZ0ZXIge1xuICBjb250ZW50OiAnbWVudSc7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIHJpZ2h0OiAxMTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnLCBcIkhlbHZldGljYU5ldWUtTGlnaHRcIiwgXCJIZWx2ZXRpY2EgTmV1ZSBMaWdodFwiLCBcIkhlbHZldGljYSBOZXVlXCIsIEhlbHZldGljYSwgQXJpYWwsIFwiTHVjaWRhIEdyYW5kZVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5uYXYtdG9nZ2xlOmhvdmVyOmFmdGVyIHtcbiAgY29sb3I6ICNmZTQ1ODY7XG59XG4ucG9zdC1mb290ZXIge1xuICBkaXNwbGF5OiBub25lO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMTAwJTtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIHBhZGRpbmc6IDAuNXJlbSAxcmVtIDFyZW0gMXJlbTtcbiAgei1pbmRleDogMTA7XG4gIGJvcmRlci1ib3R0b206IDUwMHB4IHNvbGlkICNmZmY7XG59XG4ucG9zdDp0YXJnZXQgLnBvc3QtZm9vdGVyLFxuLnBvc3QuYWN0aXZlIC5wb3N0LWZvb3RlciB7XG4gIGJvdHRvbTogLTUwMHB4O1xuICB0b3A6IGF1dG87XG59XG4ucG9zdC1mb290ZXIgLmhlYWRsaW5lLXN1YiB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi10b3A6IDAuM3JlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMztcbiAgZm9udC1zaXplOiAwLjVyZW07XG59XG5AbWVkaWEgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSB7XG4gIC5wb3N0LWZvb3RlciAuaGVhZGxpbmUtc3ViIHtcbiAgICBmb250LXNpemU6IDAuOHJlbTtcbiAgfVxufVxuLnBvc3QtZm9vdGVyIC5wb3N0LWZvb3Rlci1jb250ZW50IC5oZWFkbGluZS1zdWIge1xuICBwYWRkaW5nLXRvcDogMC41cmVtO1xuICBmb250LXNpemU6IDAuNjVyZW07XG59XG4ucG9zdC1mb290ZXIgLnBvc3QtZm9vdGVyLWNvbnRlbnQgLm9wZW4ge1xuICBkaXNwbGF5OiBub25lO1xufVxuLmpzIC5wb3N0LWZvb3RlciB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuLmpzIC5wb3N0LWZvb3Rlci1jb250ZW50IHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWF4LWhlaWdodDogMDtcbiAgdHJhbnNpdGlvbjogbWF4LWhlaWdodCAwLjM1cyBlYXNlLW91dDtcbn1cbi5qcyAucG9zdC1mb290ZXIgLnNjcm9sbC1zdGF0dXMge1xuICBkaXNwbGF5OiBpbmxpbmU7XG59XG4uanMgLnBvc3QtZm9vdGVyIC5vcGVuLFxuLmpzIC5wb3N0LWZvb3RlciAuY29weS1saW5rIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwLjVyZW07XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMCUpO1xufVxuLmpzIC5wb3N0LWZvb3RlciAub3BlbiB7XG4gIGxlZnQ6IDFyZW07XG59XG4uanMgLnBvc3QtZm9vdGVyIC5vcGVuLnRvb2x0aXAudXA6aG92ZXI6YWZ0ZXIge1xuICBsZWZ0OiAtMC41cmVtO1xuICByaWdodDogYXV0bztcbiAgYm90dG9tOiAxNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpO1xufVxuLmpzIC5wb3N0LWZvb3RlciAuY29weS1saW5rIHtcbiAgcmlnaHQ6IDFyZW07XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgzMCUpO1xufVxuLmpzIC5wb3N0LWZvb3RlciAuY29weS1saW5rOmhvdmVyIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuLmpzIC5wb3N0LWZvb3RlciAuY29weS1saW5rLnRvb2x0aXAudXA6aG92ZXI6YWZ0ZXIge1xuICByaWdodDogLTAuNXJlbTtcbiAgbGVmdDogYXV0bztcbiAgYm90dG9tOiAxNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpO1xufVxuLmpzIC5wb3N0LWZvb3Rlci5hY3RpdmUgLnBvc3QtZm9vdGVyLWNvbnRlbnQge1xuICBtYXgtaGVpZ2h0OiA1MDBweDtcbiAgdHJhbnNpdGlvbjogbWF4LWhlaWdodCAwLjI1cyBlYXNlLWluO1xufVxuLnBvc3QtbmF2IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuLnBvc3QtbmF2IC5vcGVuIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYm9yZGVyOiBub25lO1xuICBvdXRsaW5lOiBub25lO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4ucG9zdC10bGRyLWhlYWRsaW5lIHtcbiAgbWFyZ2luLXRvcDogMS41cmVtO1xufVxuLnBvc3QtdGxkciB7XG4gIG1hcmdpbi10b3A6IDAuNXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMS41cmVtO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG4ucG9zdC12aWV3IHtcbiAgcGFkZGluZzogMXJlbTtcbiAgYW5pbWF0aW9uOiBwdWxzZSAwLjJzIGxpbmVhciAxO1xufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3MDBweCkgYW5kIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAucG9zdC12aWV3IHtcbiAgICBwYWRkaW5nOiAxcmVtIDEwJTtcbiAgfVxufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLnBvc3QtdmlldyB7XG4gICAgcGFkZGluZzogMXJlbSAxMCUgMXJlbSA0MCU7XG4gIH1cbn1cbi5wb3N0IHtcbiAgcGFkZGluZy10b3A6IDNyZW07XG4gIHBhZGRpbmctYm90dG9tOiAzcmVtO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4ucG9zdCAubWFya2Rvd24tY29udGFpbmVyID4gaDE6Zmlyc3QtY2hpbGQgKyBwOjpmaXJzdC1sZXR0ZXIsXG4ucG9zdCAubWFya2Rvd24tY29udGFpbmVyID4gaDI6Zmlyc3QtY2hpbGQgKyBwOjpmaXJzdC1sZXR0ZXIsXG4ucG9zdCAubWFya2Rvd24tY29udGFpbmVyID4gaDM6Zmlyc3QtY2hpbGQgKyBwOjpmaXJzdC1sZXR0ZXIge1xuICBmb250LXNpemU6IDNyZW07XG4gIGZsb2F0OiBsZWZ0O1xuICBsaW5lLWhlaWdodDogM3JlbTtcbiAgcGFkZGluZy1yaWdodDogMC41cmVtO1xufVxuLnBvc3QgLm1hcmtkb3duLWNvbnRhaW5lciA+IHA6Zmlyc3QtY2hpbGQ6OmZpcnN0LWxldHRlciB7XG4gIGZvbnQtc2l6ZTogM3JlbTtcbiAgZmxvYXQ6IGxlZnQ7XG4gIGxpbmUtaGVpZ2h0OiAzcmVtO1xuICBwYWRkaW5nLXJpZ2h0OiAwLjVyZW07XG59XG4ucG9zdC1tZXRhIHtcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0JywgXCJIZWx2ZXRpY2FOZXVlLUxpZ2h0XCIsIFwiSGVsdmV0aWNhIE5ldWUgTGlnaHRcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBIZWx2ZXRpY2EsIEFyaWFsLCBcIkx1Y2lkYSBHcmFuZGVcIiwgc2Fucy1zZXJpZjtcbiAgbWFyZ2luLXRvcDogMDtcbn1cbi5wb3N0LWNhdGVnb3J5LFxuLnBvc3QtZGF0ZSxcbi5wb3N0LWF1dGhvciB7XG4gIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIFwiSGVsdmV0aWNhTmV1ZS1MaWdodFwiLCBcIkhlbHZldGljYSBOZXVlIExpZ2h0XCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgSGVsdmV0aWNhLCBBcmlhbCwgXCJMdWNpZGEgR3JhbmRlXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMC43cmVtO1xuICBmb250LXNpemU6IDMuMnZ3O1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3MDBweCkge1xuICAucG9zdC1jYXRlZ29yeSxcbiAgLnBvc3QtZGF0ZSxcbiAgLnBvc3QtYXV0aG9yIHtcbiAgICBmb250LXNpemU6IDAuN3JlbTtcbiAgfVxufVxuLnBvc3QtY2F0ZWdvcnksXG4ucG9zdC1kYXRlIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cbi5wb3N0LWF1dGhvciB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBsaW5lLWhlaWdodDogMTtcbn1cbi5wb3N0cyB7XG4gIHBhZGRpbmc6IDFyZW07XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDcwMHB4KSBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gIC5wb3N0cyB7XG4gICAgcGFkZGluZzogMXJlbSAxMCU7XG4gIH1cbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5wb3N0cyB7XG4gICAgcGFkZGluZzogMXJlbSAxMCUgMXJlbSA0MCU7XG4gIH1cbn1cbi5wb3N0cyBhLmZhOmhvdmVyIHtcbiAgY29sb3I6ICNmZTQ1ODY7XG59XG4uc2Nyb2xsLXN0YXR1cyB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nLXRvcDogMDtcbn1cbi5zY3JvbGwtc3RhdHVzLWJ1YmJsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjOGM4Yzg7XG4gIGhlaWdodDogMC4ycmVtO1xuICB3aWR0aDogMC4ycmVtO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIG1hcmdpbi1yaWdodDogMC41cmVtO1xufVxuLnNjcm9sbC1zdGF0dXMtYnViYmxlLmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM3YzdhN2E7XG59XG4udG9vbHRpcDpob3ZlcjphZnRlciB7XG4gIGNvbnRlbnQ6IGF0dHIodGl0bGUpO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB6LWluZGV4OiA5OTk5O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMjMyMzI7XG4gIGNvbG9yOiAjZmZmO1xuICBwYWRkaW5nOiAwLjVyZW0gMXJlbTtcbiAgdGV4dC10cmFuc2Zvcm06IGxvd2VyY2FzZTtcbiAgZm9udC1zaXplOiAwLjZyZW07XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbn1cbi50b29sdGlwLmxlZnQ6aG92ZXI6YWZ0ZXIsXG4udG9vbHRpcC5yaWdodDpob3ZlcjphZnRlciB7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTMwJSk7XG59XG4udG9vbHRpcC5sZWZ0OmhvdmVyOmFmdGVyIHtcbiAgcmlnaHQ6IDEwMCU7XG59XG4udG9vbHRpcC5yaWdodDpob3ZlcjphZnRlciB7XG4gIGxlZnQ6IDEwMCU7XG59XG4udG9vbHRpcC5ib3R0b206aG92ZXI6YWZ0ZXIsXG4udG9vbHRpcC51cDpob3ZlcjphZnRlciB7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xufVxuLnRvb2x0aXAuYm90dG9tOmhvdmVyOmFmdGVyIHtcbiAgdG9wOiAxMDAlO1xufVxuLnRvb2x0aXAudXA6aG92ZXI6YWZ0ZXIge1xuICBib3R0b206IDEwMCU7XG59XG5wcmVbY2xhc3MqPVwibGFuZ3VhZ2UtXCJdIHtcbiAgcGFkZGluZzogMC41cmVtIDFyZW0gMC43cmVtIDFyZW07XG59XG5jb2RlIHtcbiAgZm9udC1zaXplOiAwLjZyZW07XG59XG46bm90KHByZSkgPiBjb2RlW2NsYXNzKj1cImxhbmd1YWdlLVwiXSxcbnByZVtjbGFzcyo9XCJsYW5ndWFnZS1cIl0ge1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBtYXJnaW4tcmlnaHQ6IC0xcmVtO1xuICBtYXJnaW4tbGVmdDogLTFyZW07XG4gIGxpbmUtaGVpZ2h0OiAwLjg7XG59XG4uc3RhdGljLXZpZXcge1xuICBwYWRkaW5nOiAxcmVtO1xuICBhbmltYXRpb246IHB1bHNlIDAuMnMgbGluZWFyIDE7XG59XG4uc3RhdGljLXZpZXcgaDMge1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xufVxuLnN0YXRpYy12aWV3IHAge1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XG59XG4uc3RhdGljLXZpZXcgc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4iLCJAa2V5ZnJhbWVzIHB1bHNlIHtcbiAgICAwJSB7IHRyYW5zZm9ybTogc2NhbGUoMSkgfVxuICAgIDUwJSB7IHRyYW5zZm9ybTogc2NhbGUoMS4wNSkgfVxuICAgIDEwMCUgeyB0cmFuc2Zvcm06IHNjYWxlKDEpIH1cbn1cblxuQGtleWZyYW1lcyBuYXYtc2xpZGUge1xuICAgIDAlIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKSB9XG4gICAgNTAlIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIH1cbiAgICAxMDAlIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKSB9XG59XG5cbkBrZXlmcmFtZXMgbmF2LXNsaWRlLXRhYmxldCB7XG4gICAgMCUgeyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpIH1cbiAgICA1MCUgeyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTMwJSkgfVxuICAgIDEwMCUgeyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTYwJSkgfVxufVxuIiwiLy8gbWV5ZXIgcmVzZXQsIGJ1dCBuYW1lc3BhY2VkXG5odG1sLCBib2R5LCBkaXYsIHNwYW4sIGFwcGxldCwgb2JqZWN0LCBpZnJhbWUsXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBwcmUsXG5hLCBhYmJyLCBhY3JvbnltLCBhZGRyZXNzLCBiaWcsIGNpdGUsIGNvZGUsXG5kZWwsIGRmbiwgZW0sIGltZywgaW5zLCBrYmQsIHEsIHMsIHNhbXAsXG5zbWFsbCwgc3RyaWtlLCBzdHJvbmcsIHN1Yiwgc3VwLCB0dCwgdmFyLFxuYiwgdSwgaSwgY2VudGVyLFxuZGwsIGR0LCBkZCwgb2wsIHVsLCBsaSxcbmZpZWxkc2V0LCBmb3JtLCBsYWJlbCwgbGVnZW5kLFxudGFibGUsIGNhcHRpb24sIHRib2R5LCB0Zm9vdCwgdGhlYWQsIHRyLCB0aCwgdGQsXG5hcnRpY2xlLCBhc2lkZSwgY2FudmFzLCBkZXRhaWxzLCBlbWJlZCxcbmZpZ3VyZSwgZmlnY2FwdGlvbiwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCxcbm1lbnUsIG5hdiwgb3V0cHV0LCBydWJ5LCBzZWN0aW9uLCBzdW1tYXJ5LFxudGltZSwgbWFyaywgYXVkaW8sIHZpZGVvIHtcblx0bWFyZ2luOiAwO1xuXHRwYWRkaW5nOiAwO1xuXHRib3JkZXI6IDA7XG5cdGZvbnQtc2l6ZTogMTAwJTtcblx0Zm9udDogaW5oZXJpdDtcblx0dmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuLyogSFRNTDUgZGlzcGxheS1yb2xlIHJlc2V0IGZvciBvbGRlciBicm93c2VycyAqL1xuYXJ0aWNsZSwgYXNpZGUsIGRldGFpbHMsIGZpZ2NhcHRpb24sIGZpZ3VyZSxcbmZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIG1lbnUsIG5hdiwgc2VjdGlvbiB7XG5cdGRpc3BsYXk6IGJsb2NrO1xufVxuYm9keSB7XG5cdGxpbmUtaGVpZ2h0OiAxO1xufVxub2wsIHVsIHtcblx0bGlzdC1zdHlsZTogbm9uZTtcbn1cbmJsb2NrcXVvdGUsIHEge1xuXHRxdW90ZXM6IG5vbmU7XG59XG5ibG9ja3F1b3RlOmJlZm9yZSwgYmxvY2txdW90ZTphZnRlcixcbnE6YmVmb3JlLCBxOmFmdGVyIHtcblx0Y29udGVudDogJyc7XG5cdGNvbnRlbnQ6IG5vbmU7XG59XG50YWJsZSB7XG5cdGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG5cdGJvcmRlci1zcGFjaW5nOiAwO1xufVxuIiwiLyohIFR5cGViYXNlLmxlc3MgdjAuMS4wIHwgTUlUIExpY2Vuc2UgKi9cbi8qIFNldHVwICovXG5odG1sIHtcbiAgLyogQ2hhbmdlIGRlZmF1bHQgdHlwZWZhY2VzIGhlcmUgKi9cbiAgZm9udC1mYW1pbHk6IHNlcmlmO1xuICBmb250LXNpemU6IDEzNy41JTtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG59XG4vKiBDb3B5ICYgTGlzdHMgKi9cbnAge1xuICBsaW5lLWhlaWdodDogMS41cmVtO1xuICBtYXJnaW4tdG9wOiAxLjVyZW07XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG51bCxcbm9sIHtcbiAgbWFyZ2luLXRvcDogMS41cmVtO1xuICBtYXJnaW4tYm90dG9tOiAxLjVyZW07XG59XG51bCBsaSxcbm9sIGxpIHtcbiAgbGluZS1oZWlnaHQ6IDEuNXJlbTtcbn1cbnVsIHVsLFxub2wgdWwsXG51bCBvbCxcbm9sIG9sIHtcbiAgbWFyZ2luLXRvcDogMDtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbmJsb2NrcXVvdGUge1xuICBsaW5lLWhlaWdodDogMS41cmVtO1xuICBtYXJnaW4tdG9wOiAxLjVyZW07XG4gIG1hcmdpbi1ib3R0b206IDEuNXJlbTtcbn1cbi8qIEhlYWRpbmdzICovXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYge1xuICAvKiBDaGFuZ2UgaGVhZGluZyB0eXBlZmFjZXMgaGVyZSAqL1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgbWFyZ2luLXRvcDogMS41cmVtO1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICBsaW5lLWhlaWdodDogMS41cmVtO1xufVxuaDEge1xuICBmb250LXNpemU6IDQuMjQycmVtO1xuICBsaW5lLWhlaWdodDogNC41cmVtO1xuICBtYXJnaW4tdG9wOiAzcmVtO1xufVxuaDIge1xuICBmb250LXNpemU6IDIuODI4cmVtO1xuICBsaW5lLWhlaWdodDogM3JlbTtcbiAgbWFyZ2luLXRvcDogM3JlbTtcbn1cbmgzIHtcbiAgZm9udC1zaXplOiAxLjQxNHJlbTtcbn1cbmg0IHtcbiAgZm9udC1zaXplOiAwLjcwN3JlbTtcbn1cbmg1IHtcbiAgZm9udC1zaXplOiAwLjQ3MTMzMzMzMzMzMzMzMzNyZW07XG59XG5oNiB7XG4gIGZvbnQtc2l6ZTogMC4zNTM1cmVtO1xufVxuLyogVGFibGVzICovXG50YWJsZSB7XG4gIG1hcmdpbi10b3A6IDEuNXJlbTtcbiAgYm9yZGVyLXNwYWNpbmc6IDBweDtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbn1cbnRhYmxlIHRkLFxudGFibGUgdGgge1xuICBwYWRkaW5nOiAwO1xuICBsaW5lLWhlaWdodDogMzNweDtcbn1cbi8qIENvZGUgYmxvY2tzICovXG5jb2RlIHtcbiAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcbn1cbi8qIExlYWRpbmcgcGFyYWdyYXBoIHRleHQgKi9cbi5sZWFkIHtcbiAgZm9udC1zaXplOiAxLjQxNHJlbTtcbn1cbi8qIEh1ZyB0aGUgYmxvY2sgYWJvdmUgeW91ICovXG4uaHVnIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cbiIsIkByZXF1aXJlICdfcmVzZXQnXG5AcmVxdWlyZSBcIl90eXBlYmFzZVwiXG5cbipcbiAgYm94LXNpemluZyBib3JkZXItYm94XG5cbi8vIGxvdyByZXMgbW9iaWxlIGZvbnQtc2l6ZVxuaHRtbFxuICBmb250LXNpemUgMTUwJVxuXG4ucmxiXG4gIGJhY2tncm91bmQgbWFpbi1iZ1xuXG4ucmxiXG4gIGZvbnQtZmFtaWx5OiBcIkhlbHZldGljYU5ldWUtTGlnaHRcIiwgXCJIZWx2ZXRpY2EgTmV1ZSBMaWdodFwiLCBcIkhlbHZldGljYSBOZXVlXCIsIEhlbHZldGljYSwgQXJpYWwsIFwiTHVjaWRhIEdyYW5kZVwiLCBzYW5zLXNlcmlmXG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIHBhZGRpbmcgMFxuICBtYXJnaW4gMFxuXG4gIHBcbiAgICBmdC1iYXNlKClcbiAgICBmb250LXNpemUgLjhyZW1cblxuICBlbVxuICAgIGZvbnQtc3R5bGUgaXRhbGljXG5cblxuYVxuICB0ZXh0LWRlY29yYXRpb24gbm9uZVxuICBjb2xvciBsaW5rLWNvbG9yXG5cbiAgJjpob3ZlclxuICAgIGNvbG9yIGxpbmstaG92ZXJcbiAgICB0ZXh0LWRlY29yYXRpb24gdW5kZXJsaW5lXG5cbiAgJjphY3RpdmVcbiAgICBjb2xvciBsaW5rLWFjdGl2ZVxuXG4gIC5oaWdobGlnaHRcbiAgICBjb2xvciByZWRcbiIsIi5icmFuZFxuICBmdC1icmFuZCgpXG4gIGZvbnQtc2l6ZSAwXG4gIGJhY2tncm91bmQtY29sb3IgI2ZmZlxuICB3aWR0aCAzcmVtXG4gIGhlaWdodCAzcmVtXG4gIHRleHQtYWxpZ24gY2VudGVyXG5cbiAgLmpzICZcbiAgICBwb3NpdGlvbiBmaXhlZFxuICAgIC8vIHRvcCAwXG4gICAgbGVmdCAwXG4gICAgei1pbmRleCA1MDBcblxuICAuYnJhbmQtc3VibGluZVxuICAgIGRpc3BsYXkgbm9uZVxuXG4gICtkZXNrdG9wKClcbiAgICBiYWNrZ3JvdW5kLWNvbG9yIHRyYW5zcGFyZW50XG4gICAgY29sb3IgIzAwMFxuICAgIHdpZHRoIDM1JVxuICAgIGhlaWdodCBhdXRvXG4gICAgZm9udC1zaXplIDEuM3JlbVxuICAgIGZvbnQtc2l6ZSAzdndcblxuICAgIHRvcCA1cmVtXG4gICAgdGV4dC1hbGlnbiByaWdodFxuXG4gICAgLmJyYW5kLXN1YmxpbmVcbiAgICAgIG1hcmdpbi10b3AgMS4ycmVtXG4gICAgICBsaW5lLWhlaWdodCAxLjVcbiAgICAgIGZ0LWxhdG8oKVxuICAgICAgZGlzcGxheSBibG9ja1xuICAgICAgZm9udC1zaXplIC45cmVtXG4gICAgICBmb250LXdlaWdodCAxMDBcblxuICAmOmJlZm9yZVxuICAgIGZvbnQtc2l6ZSAxcmVtXG4gICAgZGlzcGxheSBpbmxpbmUtYmxvY2tcbiAgICBjb250ZW50ICdSZCdcbiAgICBwb3NpdGlvbiByZWxhdGl2ZVxuICAgIHRvcCA1MCVcbiAgICB0cmFuc2Zvcm0gdHJhbnNsYXRlWSgtNTAlKVxuXG4gICAgK2Rlc2t0b3AoKVxuICAgICAgZGlzcGxheSBub25lXG4iLCJ0YWJsZXQoKVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDcwMHB4KSBhbmQgKG1heC13aWR0aDogMTAyM3B4KVxuICAgIHtibG9ja31cblxuZGVza3RvcCgpXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KVxuICAgIHtibG9ja31cblxubXFfaGlnaHJlcygpXG4gIEBtZWRpYSAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMyksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKVxuICAgIHtibG9ja31cblxuXG51cC1mcm9tLXRhYmxldCgpXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzAwcHgpXG4gICAge2Jsb2NrfVxuIiwiYnRuLXByaW1hcnktYmcgPSBwZWFybC13aGl0ZVxuYnRuLXByaW1hcnktYmctY29udHJhc3QgPSBsaW5rLWhvdmVyXG5idG4tcHJpbWFyeS1mdCA9IHBlYXJsLWJsYWNrXG5idG4tcHJpbWFyeS1mdC1jb250cmFzdCA9ICNmZmZcblxuLnJsYiAuYnRuXG4gIHBhZGRpbmcgLjVyZW1cbiAgdGV4dC1hbGlnbiBjZW50ZXJcbiAgZm9udC13ZWlnaHQgMTAwXG4gIGZvbnQtZmFtaWx5ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZlxuLnJsYiAuYnRuLXByaW1hcnlcbiAgZGlzcGxheSBibG9ja1xuICBib3JkZXIgbm9uZVxuICBiYWNrZ3JvdW5kLWNvbG9yIGJ0bi1wcmltYXJ5LWJnXG4gIGNvbG9yIGJ0bi1wcmltYXJ5LWZ0XG4gIHRleHQtdHJhbnNmb3JtIHVwcGVyY2FzZVxuXG4gICY6aG92ZXJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yIGJ0bi1wcmltYXJ5LWJnLWNvbnRyYXN0XG4gICAgY29sb3IgYnRuLXByaW1hcnktZnQtY29udHJhc3RcbiAgICB0ZXh0LWRlY29yYXRpb24gbm9uZVxuIiwiQHJlcXVpcmUgJy4vX2J1dHRvbi1wcmltYXJ5J1xuXG4uYnRuXG4gIHVzZXItc2VsZWN0IG5vbmVcbiAgY3Vyc29yIHBvaW50ZXJcbiAgdGV4dC1kZWNvcmF0aW9uIG5vbmVcbiIsIi5ybGIgLnJsYi1mb290ZXIgLmF1dGhvci1pbmZvcm1hdGlvblxuICBmdC1tb250c2VycmF0KClcbiAgYmFja2dyb3VuZC1jb2xvciBwZWFybC13aGl0ZVxuICB0ZXh0LWFsaWduIGNlbnRlclxuICBwYWRkaW5nIDNyZW0gMXJlbVxuXG4gICtkZXNrdG9wKClcbiAgICBwYWRkaW5nIDhyZW0gMXJlbVxuXG5cbiAgYVxuICAgIGZvbnQtc2l6ZSAuNnJlbVxuXG4gIC5hdXRob3Itc3VibGluZVxuICAgIHBhZGRpbmctdG9wIC41cmVtXG4gICAgZm9udC1zaXplIC42cmVtXG4gICAgbGluZS1oZWlnaHQgMS41XG5cbi5zb2NpYWwtbmV0d29ya3NcbiAgJiA+ICpcbiAgICBwYWRkaW5nLXRvcCAuNXJlbVxuXG5cblxuLmF1dGhvci1hdmF0YXJcbiAgbWFyZ2luLWJvdHRvbSAuNXJlbVxuXG4gIGltZ1xuICAgIG1heC13aWR0aCAzMCVcbiAgICBib3JkZXItcmFkaXVzIDEwMCVcblxuICAgICt1cC1mcm9tLXRhYmxldCgpXG4gICAgICBtYXgtd2lkdGggMjAwcHhcbiIsIi5ybGIgLnJsYi1mb290ZXIgLmNvcHktcmlnaHQtbm90aWNlXG4gIGJhY2tncm91bmQtY29sb3IgIzAwYmRmZlxuICBjb2xvciAjZmZmXG4gIHRleHQtYWxpZ24gY2VudGVyXG4gIHBhZGRpbmcgMnJlbSAxcmVtXG4gIHBhZGRpbmctYm90dG9tIDZyZW1cblxuICAuY29weXJpZ2h0LWhpbnRcbiAgICBmdC1tb250c2VycmF0KClcbiAgICB0ZXh0LXRyYW5zZm9ybSB1cHBlcmNhc2VcbiAgICBmb250LXNpemUgLjZyZW1cbiAgICBsZXR0ZXItc3BhY2luZyAxcHhcbiIsIi5ybGIgLnJsYi1mb290ZXIgLmltcHJlc3N1bS1saW5rXG4gICAgZnQtbW9udHNlcnJhdCgpXG4gICAgdGV4dC10cmFuc2Zvcm0gdXBwZXJjYXNlXG4gICAgZm9udC1zaXplIC42cmVtXG4gICAgbGV0dGVyLXNwYWNpbmcgMXB4XG4gICAgYm9yZGVyLWJvdHRvbSAxcHggc29saWQgI2ZmZlxuICAgIHBhZGRpbmctYm90dG9tIDFyZW1cblxuICAgIGFcbiAgICAgIGNvbG9yICNmZmZcbiIsIkByZXF1aXJlICcuL19hdXRob3ItaW5mb3JtYXRpb24nXG5AcmVxdWlyZSAnLi9fY29weXJpZ2h0LW5vdGljZSdcbkByZXF1aXJlICcuL19pbXByZXNzdW0tbGluaydcblxuLnJsYiAucmxiLWZvb3RlclxuICBvdmVyZmxvdyBoaWRkZW5cbiIsIi5ybGIgLmhlYWRsaW5lLXByaW1hcnlcbiAgZnQtcHJpbWFyeSgpXG4gIGZvbnQtc2l6ZSA1ZW1cbiAgZm9udC1zaXplIDZ2d1xuICBmb250LXdlaWdodCA3MDBcbiAgdGV4dC10cmFuc2Zvcm0gdXBwZXJjYXNlXG4gIGxpbmUtaGVpZ2h0IDEuM1xuICBtYXJnaW4tdG9wIC41cmVtXG5cbiAgK3VwLWZyb20tdGFibGV0KClcbiAgICBmb250LXNpemUgMnJlbVxuIiwiLnJsYiAuaGVhZGxpbmUtc3ViXG4gIGZ0LXByaW1hcnkoKVxuICBmb250LXNpemUgMS4xcmVtXG4gIGZvbnQtc2l6ZSA0LjV2d1xuICBsaW5lLWhlaWdodCAxLjFcblxuICArdXAtZnJvbS10YWJsZXQoKVxuICAgIGZvbnQtc2l6ZSAxLjFyZW1cbiIsIkByZXF1aXJlIFwiLi4vLi4vZ2xvYmFscy9fbXFoZWxwZXJcIlxuXG54aGVyby1iYW5uZXItYmcgPSBwZWFybC1ibGFja1xuXG4ucmxiIC5oZXJvLWJhbm5lci1jb250ZW50XG4gIGJhY2tncm91bmQtY29sb3IgbWFpbi1iZ1xuXG4ucmxiIC5oZXJvLWJhbm5lclxuICBiYWNrZ3JvdW5kLWNvbG9yIGhlcm8tYmFubmVyLWJnXG4gIGJhY2tncm91bmQtcmVwZWF0IG5vLXJlcGVhdFxuICBiYWNrZ3JvdW5kLXNpemUgY292ZXJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbiBjZW50ZXIgY2VudGVyXG5cbiAgK3VwLWZyb20tdGFibGV0KClcbiAgICAmXG4gICAgICB0ZXh0LWFsaWduIGNlbnRlclxuXG4gIC5oZXJvLWJhbm5lci1tZXNzYWdlXG4gICAgcGFkZGluZyAxcmVtXG5cbiAgICAuaGVhZGxpbmUtc3ViLCAuaGVhZGxpbmUtcHJpbWFyeVxuICAgICAgY29sb3IgcGVhcmwtd2hpdGVcblxuICAgIC5oZXJvLWJhbm5lci1jYWxsMmFjdGlvblxuICAgICAgbWFyZ2luLXRvcCAycmVtXG4gICAgICArdXAtZnJvbS10YWJsZXQoKVxuICAgICAgICAmXG4gICAgICAgICAgZGlzcGxheSBpbmxpbmUtYmxvY2tcbiAgICAgICAgICBwYWRkaW5nIC44cmVtIDRyZW1cblxuLm5vLWpzIC5ybGIgLmhlcm8tYmFubmVyLXBhZ2VcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiBjb2x1bW47XG5cbiAgLmhlcm8tYmFubmVyXG4gICAgb3JkZXI6IC0xO1xuICAgIG1hcmdpbi1ib3R0b20gM3JlbVxuXG4gIC5icmFuZC5pbi1oZXJvLWJhbm5lclxuICAgIGRpc3BsYXkgbm9uZVxuXG4uanMgLnJsYiAuaGVyby1iYW5uZXJcbiAgICBwb3NpdGlvbiBmaXhlZFxuICAgIHRvcCAwXG4gICAgcmlnaHQgMFxuICAgIGJvdHRvbSAwXG4gICAgbGVmdCAwXG5cbiAgICB6LWluZGV4IC0xXG5cbiAgICAuaGVyby1iYW5uZXItbWVzc2FnZVxuICAgICAgcG9zaXRpb24gYWJzb2x1dGVcbiAgICAgIGxlZnQgMFxuICAgICAgcmlnaHQgMFxuICAgICAgYm90dG9tIDUlXG5cbiAgICAgICt0YWJsZXQoKVxuICAgICAgICBsZWZ0IDEwJVxuICAgICAgICByaWdodCAxMCVcblxuICAgICAgK2Rlc2t0b3AoKVxuICAgICAgICBsZWZ0IDEwJVxuICAgICAgICByaWdodCAxMCVcblxuICAgICAgLmhlYWRsaW5lLXByaW1hcnlcbiAgICAgICAgZm9udC1zaXplIDJ2d1xuXG4gICAgICAgICttcV9oaWdocmVzKClcbiAgICAgICAgICBmb250LXNpemUgNXZ3XG5cbiAgICAgICAgK3RhYmxldCgpXG4gICAgICAgICAgZm9udC1zaXplIDV2d1xuXG4gICAgLmJyYW5kLmluLWhlcm8tYmFubmVyXG4gICAgICArZGVza3RvcCgpXG4gICAgICAgIGNvbG9yICNmZmZcbiAgICAgICAgdG9wIDFyZW1cbiAgICAgICAgbGVmdCAxcmVtXG4gICAgICAgIHRleHQtYWxpZ24gbGVmdFxuXG4gICAgICAgIC5icmFuZC1zdWJsaW5lXG4gICAgICAgICAgZGlzcGxheSBub25lXG5cblxuXG4uanMgLnJsYlxuICAvLyBhbmNob3ItXCJuYXZpZ2F0aW9uXCIgd2l0aCBkZWZhdWx0IGZhbGxiYWNrIHBhZ2UgaW5zcGlyZWQgYnlcbiAgLy8gaHR0cDovL3d3dy5zbWFzaGluZ21hZ2F6aW5lLmNvbS8yMDE1LzEyL3JlaW1hZ2luaW5nLXNpbmdsZS1wYWdlLWFwcGxpY2F0aW9ucy1wcm9ncmVzc2l2ZS1lbmhhbmNlbWVudC8jdGhlLWRlZmF1bHQtdmlld1xuICAuaGVyby1iYW5uZXItcGFnZSA+ICo6Zmlyc3QtY2hpbGRcbiAgICBkaXNwbGF5IG5vbmVcblxuICAuaGVyby1iYW5uZXItcGFnZSA+ICo6bGFzdC1jaGlsZFxuICAgIGRpc3BsYXkgYmxvY2tcblxuICAuaGVyby1iYW5uZXItcGFnZSA+ICo6dGFyZ2V0LCAuaGVyby1iYW5uZXItcGFnZSA+IC5zZWxlY3RlZC10YXJnZXRcbiAgICBkaXNwbGF5IGJsb2NrXG4gICAgYW5pbWF0aW9uOiBwdWxzZSAwLjJzIGxpbmVhciAxO1xuXG4gIC5oZXJvLWJhbm5lci1wYWdlID4gKjp0YXJnZXQgfiAqLCAuaGVyby1iYW5uZXItcGFnZSA+IC5zZWxlY3RlZC10YXJnZXQgfiAqXG4gICAgZGlzcGxheSBub25lXG4iLCIubWFya2Rvd24tY29udGFpbmVyXG4gIGgxLCBoMiwgaDMsIGg0LCBoNSwgaDZcbiAgICBtYXJnaW4tdG9wOiAxLjVlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuXG4gIGgxXG4gICAgZm9udC1zaXplOiAxLjgyOHJlbTtcbiAgICBsaW5lLWhlaWdodDogMnJlbTtcbiAgaDJcbiAgICBmb250LXNpemU6IDEuNDE0cmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjVyZW07XG4gIGgzXG4gICAgZm9udC1zaXplOiAxLjEwN3JlbTtcbiAgICBsaW5lLWhlaWdodDogMS4ycmVtO1xuICBoNCwgaDUsIGg2XG4gICAgZm9udC1zaXplOiAxcmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjJyZW07XG5cbiAgcFxuICAgIG1hcmdpbi10b3AgLjVyZW1cbiAgICBtYXJnaW4tYm90dG9tIDFyZW1cbiIsIi5uYXYtbGlua1xuICBmdC1tb250c2VycmF0KClcbiAgZm9udC1zaXplIC42cmVtXG5cbiAgbXFfaGlnaHJlcygpXG4gICAgZm9udC1zaXplIC40cmVtXG4iLCJcbi5uYXYtbGlzdFxuICBtYXJnaW4gMFxuICBwYWRkaW5nIDNyZW0gMCAwIDBcblxuICAuanMgJlxuICAgIHBvc2l0aW9uIGFic29sdXRlXG4gICAgdG9wIDBcbiAgICByaWdodCAwXG4gICAgYm90dG9tIDBcbiAgICBsZWZ0IDBcblxuICAgIG92ZXJmbG93LXkgc2Nyb2xsXG5cblxuXG4ubmF2LWl0ZW1cbiAgbGluZS1oZWlnaHQgMS4zXG4gIHBhZGRpbmcgLjVyZW0gLjVyZW0gLjVyZW0gMS41cmVtXG4gIHBvc2l0aW9uIHJlbGF0aXZlXG4gIGJvcmRlci10b3AgMXB4IHNvbGlkICNlNmU2ZTZcbiAgd2lkdGggMTAwJVxuXG4gICY6YmVmb3JlXG4gICAgcG9zaXRpb24gYWJzb2x1dGVcbiAgICBsZWZ0IC41cmVtXG4gICAgdG9wIDUwJVxuICAgIHRyYW5zZm9ybSB0cmFuc2xhdGVZKC01MCUpXG4gICAgZm9udC1zaXplIC42cmVtXG5cbiAgJjpsYXN0LW9mLXR5cGVcbiAgICBib3JkZXItYm90dG9tIDFweCBzb2xpZCAjZTZlNmU2XG5cblxuICAmLmltcHJlc3N1bVxuICAgIG1hcmdpbi10b3AgM3JlbVxuICAgIGJvcmRlci10b3Agbm9uZVxuICAgIGJvcmRlci1ib3R0b20gbm9uZVxuXG4gICAgYSwgJjpiZWZvcmVcbiAgICAgIGNvbG9yIGxpZ2h0ZW4ocmdiKDAsIDAsIDApLCA3MCUpXG5cbiAgICAmOmhvdmVyIGEsICY6aG92ZXI6YmVmb3JlXG4gICAgICBjb2xvciAjMDAwXG5cblxuICAucG9zdC1uYXYtbWV0YSwgLnBvc3QtbmF2LW1ldGEgc3BhblxuICAgIGZ0LW1vbnRzZXJyYXQoKVxuICAgIG1hcmdpbi10b3AgMFxuICAgIGNvbG9yIHJnYigxNTgsIDE1OCwgMTU4KVxuICAgIGZvbnQtc2l6ZSAuNXJlbSAhaW1wb3J0YW50XG4gICAgZm9udC13ZWlnaHQgMTAwXG4iLCJAcmVxdWlyZSAnLi9fbmF2LSonXG5cbi5uYXZcbiAgYmFja2dyb3VuZC1jb2xvciAjZmZmXG4gIHdpZHRoIDEwMCVcblxuICAuanMgJlxuICAgIHBvc2l0aW9uIGZpeGVkXG4gICAgdG9wIDBcbiAgICBib3R0b20gMFxuICAgIGxlZnQgMTAwJVxuICAgIHotaW5kZXggOTk5XG4gICAgLXdlYmtpdC10cmFuc2Zvcm0tc3R5bGUgcHJlc2VydmUtM2RcbiAgICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZyB0b3VjaFxuXG5cbiAgJi5hY3RpdmVcbiAgICBhbmltYXRpb24gbmF2LXNsaWRlIDAuMnMgZm9yd2FyZHM7XG5cbiAgICArdGFibGV0KClcbiAgICAgIGFuaW1hdGlvbiBuYXYtc2xpZGUtdGFibGV0IDAuMnMgZm9yd2FyZHM7XG5cbiAgICArZGVza3RvcCgpXG4gICAgICBhbmltYXRpb24gbmF2LXNsaWRlLXRhYmxldCAwLjJzIGZvcndhcmRzO1xuXG5cbi5uYXYtY2xvc2VcbiAgZGlzcGxheSBub25lXG5cbi5qcyAmXG4gIC5uYXYtY2xvc2UsIC5uYXYtdG9nZ2xlLCAubmF2LXJzcywgLm5hdi10d2l0dGVyXG4gICAgcG9zaXRpb24gYWJzb2x1dGVcbiAgICBib3JkZXIgbm9uZVxuICAgIG91dGxpbmUgbm9uZVxuXG4ubmF2XG4gIC5uYXYtcnNzLCAubmF2LXR3aXR0ZXJcbiAgICB0b3AgM3JlbVxuICAgIHdpZHRoIDNyZW1cbiAgICByaWdodCAxMDAlXG4gICAgLy8gcGFkZGluZy1yaWdodCAxLjJyZW1cbiAgICBiYWNrZ3JvdW5kLWNvbG9yIHRyYW5zcGFyZW50XG4gICAgY29sb3IgI2ZmZlxuICAgIHRleHQtYWxpZ24gY2VudGVyXG4gICAgcGFkZGluZy10b3AgMS41cmVtXG4gICAgcGFkZGluZy1ib3R0b20gLjVyZW1cblxuICAgICYudG9vbHRpcDpob3ZlcjphZnRlclxuICAgICAgcmlnaHQgODAlXG5cbiAgICAmOmhvdmVyXG4gICAgICBjb2xvciBsaW5rLWhvdmVyXG4gICAgICB0ZXh0LWRlY29yYXRpb24gbm9uZVxuXG4gIC5uYXYtdHdpdHRlclxuICAgIHRvcCA0LjVyZW1cblxuICAgICY6aG92ZXJcbiAgICAgIGNvbG9yIHR3aXR0ZXItYmx1ZVxuXG4ubmF2LWNsb3NlXG4gIHRvcCAxcmVtXG4gIHJpZ2h0IDFyZW1cbiAgYmFja2dyb3VuZC1jb2xvciB0cmFuc3BhcmVudFxuICB6LWluZGV4IDEwMDFcblxuLm5hdi10b2dnbGVcbiAgcmlnaHQgMTAwJVxuICB0b3AgMFxuICB3aWR0aCAzcmVtXG4gIGhlaWdodCAzcmVtXG4gIGJhY2tncm91bmQtY29sb3IgcGVhcmwtd2hpdGVcbiAgY29sb3IgIzAwMFxuXG4gICY6YWZ0ZXJcbiAgICBjb250ZW50OiAnbWVudSdcbiAgICBwb3NpdGlvbiBhYnNvbHV0ZVxuICAgIHRvcCA1MCVcbiAgICByaWdodCAxMTAlXG4gICAgdHJhbnNmb3JtIHRyYW5zbGF0ZVkoLTUwJSlcbiAgICBjb2xvciBwZWFybC13aGl0ZVxuICAgIGZ0LW1vbnRzZXJyYXQoKVxuICAgIGZvbnQtd2VpZ2h0IGJvbGRcbiAgICAvLyBmb250LXNpemUgLjZyZW1cblxuICAmOmhvdmVyOmFmdGVyXG4gICAgY29sb3IgbGluay1ob3ZlclxuIiwiLnBvc3QtZm9vdGVyXG4gIGRpc3BsYXkgbm9uZVxuICBib3gtc2l6aW5nIGJvcmRlci1ib3hcbiAgcG9zaXRpb24gZml4ZWRcblxuICB0b3AgMTAwJVxuICBsZWZ0IDBcbiAgd2lkdGggMTAwJVxuICBiYWNrZ3JvdW5kLWNvbG9yIG1lbnUtYmdcbiAgcGFkZGluZyAuNXJlbSAxcmVtIDFyZW0gMXJlbVxuICB6LWluZGV4IDEwXG4gIGJvcmRlci1ib3R0b20gNTAwcHggc29saWQgd2hpdGVcblxuICAvL1xuICAvLyArdXAtZnJvbS10YWJsZXQoKVxuICAvLyAgIGRpc3BsYXkgbm9uZSAhaW1wb3J0YW50XG5cbiAgLnBvc3Q6dGFyZ2V0ICYsIC5wb3N0LmFjdGl2ZSAmXG4gICAgYm90dG9tIC01MDBweFxuICAgIHRvcCBhdXRvXG5cbiAgLmhlYWRsaW5lLXN1YlxuICAgIG1hcmdpbiAwXG4gICAgcGFkZGluZyAwXG4gICAgZm9udC13ZWlnaHQgNzAwXG4gICAgd2lkdGggMTAwJVxuICAgIG1hcmdpbi10b3AgLjNyZW1cbiAgICBsaW5lLWhlaWdodCAxLjNcbiAgICBmb250LXNpemUgLjVyZW1cblxuICAgIEBtZWRpYSAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpXG4gICAgICBmb250LXNpemUgLjhyZW1cblxuICAucG9zdC1mb290ZXItY29udGVudFxuICAgIC5oZWFkbGluZS1zdWJcbiAgICAgIHBhZGRpbmctdG9wIC41cmVtXG4gICAgICBmb250LXNpemUgLjY1cmVtXG5cbiAgICAub3BlblxuICAgICAgZGlzcGxheSBub25lXG5cbi5qc1xuICAucG9zdC1mb290ZXJcbiAgICBkaXNwbGF5IGJsb2NrXG5cbiAgLnBvc3QtZm9vdGVyLWNvbnRlbnRcbiAgICBvdmVyZmxvdyBoaWRkZW5cbiAgICBtYXgtaGVpZ2h0IDBcbiAgICB0cmFuc2l0aW9uOiBtYXgtaGVpZ2h0IDAuMzVzIGVhc2Utb3V0O1xuXG4gIC5wb3N0LWZvb3RlclxuICAgIC5zY3JvbGwtc3RhdHVzXG4gICAgICBkaXNwbGF5IGlubGluZVxuXG4gICAgLm9wZW4sIC5jb3B5LWxpbmtcbiAgICAgIGRpc3BsYXkgYmxvY2tcbiAgICAgIHBvc2l0aW9uIGFic29sdXRlXG4gICAgICB0b3AgLjVyZW1cbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMCUpO1xuXG4gICAgLm9wZW5cbiAgICAgIGxlZnQgMXJlbVxuXG5cbiAgICAgICYudG9vbHRpcC51cDpob3ZlcjphZnRlclxuICAgICAgICBsZWZ0IC0uNXJlbVxuICAgICAgICByaWdodCBhdXRvXG4gICAgICAgIGJvdHRvbSAxNTAlXG4gICAgICAgIHRyYW5zZm9ybSB0cmFuc2xhdGVYKDAlKVxuXG5cbiAgICAuY29weS1saW5rXG4gICAgICByaWdodCAxcmVtXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMzAlKTtcbiAgICAgICY6aG92ZXJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uIG5vbmVcblxuICAgICAgJi50b29sdGlwLnVwOmhvdmVyOmFmdGVyXG4gICAgICAgIHJpZ2h0IC0uNXJlbVxuICAgICAgICBsZWZ0IGF1dG9cbiAgICAgICAgYm90dG9tIDE1MCVcbiAgICAgICAgdHJhbnNmb3JtIHRyYW5zbGF0ZVgoMCUpXG5cbiAgLnBvc3QtZm9vdGVyLmFjdGl2ZVxuICAgIC5wb3N0LWZvb3Rlci1jb250ZW50XG4gICAgICBtYXgtaGVpZ2h0IDUwMHB4XG4gICAgICB0cmFuc2l0aW9uOiBtYXgtaGVpZ2h0IDAuMjVzIGVhc2UtaW47XG4iLCIucG9zdC1uYXZcbiAgdGV4dC1hbGlnbiBjZW50ZXJcbiAgb3ZlcmZsb3cgaGlkZGVuXG5cbiAgJiAub3BlblxuICAgIGJhY2tncm91bmQgbm9uZVxuICAgIGJvcmRlciBub25lXG4gICAgb3V0bGluZSBub25lXG4gICAgY3Vyc29yIHBvaW50ZXJcbiIsIi5wb3N0LXRsZHItaGVhZGxpbmVcbiAgbWFyZ2luLXRvcCAxLjVyZW1cblxuLnBvc3QtdGxkclxuICBtYXJnaW4tdG9wIC41cmVtXG4gIG1hcmdpbi1ib3R0b20gMS41cmVtXG4gIGZvbnQtc3R5bGUgaXRhbGljXG4iLCJmaXJzdC1sZXR0ZXItaGlnaGxpZ2h0aW5nKClcbiAgZm9udC1zaXplIDNyZW1cbiAgZmxvYXQgbGVmdFxuICBsaW5lLWhlaWdodCAzcmVtXG4gIHBhZGRpbmctcmlnaHQgLjVyZW1cblxuXG4ucG9zdC12aWV3XG4gIHBhZGRpbmcgMXJlbVxuICBhbmltYXRpb246IHB1bHNlIDAuMnMgbGluZWFyIDE7XG5cbiAgK3RhYmxldCgpXG4gICAgcGFkZGluZyAxcmVtIDEwJVxuXG4gICtkZXNrdG9wKClcbiAgICBwYWRkaW5nIDFyZW0gMTAlIDFyZW0gNDAlXG5cblxuLnBvc3RcbiAgLy8gb3ZlcmZsb3cgaGlkZGVuXG4gIHBhZGRpbmctdG9wIDNyZW1cbiAgcGFkZGluZy1ib3R0b20gM3JlbVxuICBwb3NpdGlvbiByZWxhdGl2ZVxuXG4gIC5tYXJrZG93bi1jb250YWluZXJcbiAgICAmID4gaDEsICYgPiBoMiwgJiA+IGgzXG4gICAgICAmOmZpcnN0LWNoaWxkICsgcDo6Zmlyc3QtbGV0dGVyXG4gICAgICAgIGZpcnN0LWxldHRlci1oaWdobGlnaHRpbmcoKVxuXG4gICAgJiA+IHA6Zmlyc3QtY2hpbGQ6OmZpcnN0LWxldHRlclxuICAgICAgZmlyc3QtbGV0dGVyLWhpZ2hsaWdodGluZygpXG5cbi5wb3N0LW1ldGFcbiAgZnQtcHJpbWFyeSgpXG4gIG1hcmdpbi10b3AgMFxuXG5cbi5wb3N0LWNhdGVnb3J5LCAucG9zdC1kYXRlLCAucG9zdC1hdXRob3JcbiAgZnQtcHJpbWFyeSgpXG4gIGZvbnQtc2l6ZSAuN3JlbVxuICBmb250LXNpemUgMy4ydndcbiAgd2hpdGUtc3BhY2Ugbm93cmFwXG5cbiAgK3VwLWZyb20tdGFibGV0KClcbiAgICBmb250LXNpemUgLjdyZW1cblxuLnBvc3QtY2F0ZWdvcnksIC5wb3N0LWRhdGVcbiAgdGV4dC10cmFuc2Zvcm0gdXBwZXJjYXNlXG5cbi5wb3N0LWF1dGhvclxuICBkaXNwbGF5IGJsb2NrXG4gIGxpbmUtaGVpZ2h0IDFcbiIsIkByZXF1aXJlICcuL19wb3N0LWZvb3RlcidcbkByZXF1aXJlICcuL19wb3N0LW5hdidcbkByZXF1aXJlICcuL19wb3N0LXRsZHInXG5AcmVxdWlyZSAnLi9fcG9zdCdcblxuLnBvc3RzXG4gIHBhZGRpbmcgMXJlbVxuXG4gICt0YWJsZXQoKVxuICAgIHBhZGRpbmcgMXJlbSAxMCVcblxuICArZGVza3RvcCgpXG4gICAgcGFkZGluZyAxcmVtIDEwJSAxcmVtIDQwJVxuXG5cbiAgYS5mYTpob3ZlclxuICAgIGNvbG9yIGxpbmstaG92ZXJcbiIsIi5zY3JvbGwtc3RhdHVzXG4gIG1hcmdpbiAwIGF1dG9cbiAgcGFkZGluZy10b3AgMFxuXG4uc2Nyb2xsLXN0YXR1cy1idWJibGVcbiAgYmFja2dyb3VuZC1jb2xvciByZ2IoMjAwLCAyMDAsIDIwMClcbiAgaGVpZ2h0IC4ycmVtXG4gIHdpZHRoIC4ycmVtXG4gIGRpc3BsYXkgaW5saW5lLWJsb2NrXG4gIGJvcmRlci1yYWRpdXMgMTBweFxuICBtYXJnaW4tcmlnaHQgLjVyZW1cblxuICAmLmFjdGl2ZVxuICAgIGJhY2tncm91bmQtY29sb3IgcmdiKDEyNCwgMTIyLCAxMjIpXG4iLCIudG9vbHRpcFxuICAmOmhvdmVyOmFmdGVyXG4gICAgY29udGVudCBhdHRyKHRpdGxlKVxuICAgIHdoaXRlLXNwYWNlIG5vd3JhcFxuICAgIHotaW5kZXggOTk5OVxuXG4gICAgcG9zaXRpb24gYWJzb2x1dGVcblxuICAgIGJhY2tncm91bmQtY29sb3IgIzMyMzIzMlxuICAgIGNvbG9yICNmZmZcbiAgICBwYWRkaW5nIC41cmVtIDFyZW1cbiAgICB0ZXh0LXRyYW5zZm9ybSBsb3dlcmNhc2VcbiAgICBmb250LXNpemUgLjZyZW1cbiAgICBib3JkZXItcmFkaXVzIDNweFxuXG5cbiAgJi5sZWZ0OmhvdmVyOmFmdGVyLCAmLnJpZ2h0OmhvdmVyOmFmdGVyXG4gICAgdG9wIDUwJVxuICAgIHRyYW5zZm9ybSB0cmFuc2xhdGVZKC0zMCUpXG5cbiAgJi5sZWZ0OmhvdmVyOmFmdGVyXG4gICAgcmlnaHQgMTAwJVxuXG4gICYucmlnaHQ6aG92ZXI6YWZ0ZXJcbiAgICBsZWZ0IDEwMCVcblxuXG4gICYuYm90dG9tOmhvdmVyOmFmdGVyLCAmLnVwOmhvdmVyOmFmdGVyXG4gICAgbGVmdCA1MCVcbiAgICB0cmFuc2Zvcm0gdHJhbnNsYXRlWCgtNTAlKVxuXG4gICYuYm90dG9tOmhvdmVyOmFmdGVyXG4gICAgdG9wIDEwMCVcblxuICAmLnVwOmhvdmVyOmFmdGVyXG4gICAgYm90dG9tIDEwMCVcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ== */
