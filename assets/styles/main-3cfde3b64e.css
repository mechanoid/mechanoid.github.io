@import url("https://fonts.googleapis.com/css?family=Montserrat|Lato:100,300,400,400italic,300italic,700italic|Pacifico");
@import url("//maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css");
.fa {
  font-size: 0.8rem;
  position: relative;
}
.fa.fa-twitter {
  color: #4099ff;
  -webkit-transform: translateY(15%);
  transform: translateY(15%);
}
.fa.fa-github-alt {
  -webkit-transform: translateY(10%);
  transform: translateY(10%);
}
@-webkit-keyframes pulse {
  0% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
  50% {
    -webkit-transform: scale(1.05);
    transform: scale(1.05);
  }
  100% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
}
@keyframes pulse {
  0% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
  50% {
    -webkit-transform: scale(1.05);
    transform: scale(1.05);
  }
  100% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
}
@-webkit-keyframes nav-slide {
  0% {
    -webkit-transform: translateX(0%);
    transform: translateX(0%);
  }
  50% {
    -webkit-transform: translateX(-50%);
    transform: translateX(-50%);
  }
  100% {
    -webkit-transform: translateX(-100%);
    transform: translateX(-100%);
  }
}
@keyframes nav-slide {
  0% {
    -webkit-transform: translateX(0%);
    transform: translateX(0%);
  }
  50% {
    -webkit-transform: translateX(-50%);
    transform: translateX(-50%);
  }
  100% {
    -webkit-transform: translateX(-100%);
    transform: translateX(-100%);
  }
}
@-webkit-keyframes nav-slide-tablet {
  0% {
    -webkit-transform: translateX(0%);
    transform: translateX(0%);
  }
  50% {
    -webkit-transform: translateX(-30%);
    transform: translateX(-30%);
  }
  100% {
    -webkit-transform: translateX(-60%);
    transform: translateX(-60%);
  }
}
@keyframes nav-slide-tablet {
  0% {
    -webkit-transform: translateX(0%);
    transform: translateX(0%);
  }
  50% {
    -webkit-transform: translateX(-30%);
    transform: translateX(-30%);
  }
  100% {
    -webkit-transform: translateX(-60%);
    transform: translateX(-60%);
  }
}
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}
body {
  line-height: 1;
}
ol,
ul {
  list-style: none;
}
blockquote,
q {
  quotes: none;
}
blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
/* Typebase.less v0.1.0 | MIT License */
html {
/* Change default typefaces here */
  font-family: serif;
  font-size: 137.5%;
  font-smoothing: antialiased;
}
p {
  line-height: 1.5rem;
  margin-top: 1.5rem;
  margin-bottom: 0;
}
ul,
ol {
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;
}
ul li,
ol li {
  line-height: 1.5rem;
}
ul ul,
ol ul,
ul ol,
ol ol {
  margin-top: 0;
  margin-bottom: 0;
}
blockquote {
  line-height: 1.5rem;
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;
}
h1,
h2,
h3,
h4,
h5,
h6 {
/* Change heading typefaces here */
  font-family: sans-serif;
  margin-top: 1.5rem;
  margin-bottom: 0;
  line-height: 1.5rem;
}
h1 {
  font-size: 4.242rem;
  line-height: 4.5rem;
  margin-top: 3rem;
}
h2 {
  font-size: 2.828rem;
  line-height: 3rem;
  margin-top: 3rem;
}
h3 {
  font-size: 1.414rem;
}
h4 {
  font-size: 0.707rem;
}
h5 {
  font-size: 0.471333333333333rem;
}
h6 {
  font-size: 0.3535rem;
}
table {
  margin-top: 1.5rem;
  border-spacing: 0px;
  border-collapse: collapse;
}
table td,
table th {
  padding: 0;
  line-height: 33px;
}
code {
  vertical-align: bottom;
}
.lead {
  font-size: 1.414rem;
}
.hug {
  margin-top: 0;
}
* {
  box-sizing: border-box;
}
html {
  font-size: 150%;
}
.rlb {
  background: #f5f5f5;
}
.rlb {
  font-family: "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  font-weight: 300;
  padding: 0;
  margin: 0;
}
.rlb p {
  font-family: 'Lato', serif;
  font-size: 0.8rem;
}
.rlb em {
  font-style: italic;
}
a {
  text-decoration: none;
  color: #000;
}
a:hover {
  color: #fe4586;
  text-decoration: underline;
}
a:active {
  color: #e83976;
}
a .highlight {
  color: #f00;
}
.brand {
  font-family: 'Pacifico', cursive;
  font-size: 0;
  background-color: #fff;
  width: 3rem;
  height: 3rem;
  text-align: center;
  cursor: pointer;
}
.brand:hover {
  color: inherit;
  text-decoration: none;
}
.js .brand {
  position: fixed;
  left: 0;
  z-index: 500;
}
.brand .brand-subline {
  display: none;
}
@media only screen and (min-width: 1024px) {
  .brand {
    background-color: transparent;
    color: #000;
    width: 35%;
    height: auto;
    font-size: 1.3rem;
    font-size: 3vw;
    top: 5rem;
    text-align: right;
  }
  .brand .brand-subline {
    margin-top: 1.2rem;
    line-height: 1.5;
    font-family: 'Lato', serif;
    display: block;
    font-size: 0.9rem;
    font-weight: 100;
  }
}
.brand:before {
  font-size: 1rem;
  display: inline-block;
  content: 'Rd';
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%);
}
@media only screen and (min-width: 1024px) {
  .brand:before {
    display: none;
  }
}
.rlb .btn {
  padding: 0.5rem;
  text-align: center;
  font-weight: 100;
  font-family: 'Montserrat', sans-serif;
}
.rlb .btn-primary {
  display: block;
  border: none;
  background-color: #fff;
  color: #000;
  text-transform: uppercase;
}
.rlb .btn-primary:hover {
  background-color: #fe4586;
  color: #fff;
  text-decoration: none;
}
.btn {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  cursor: pointer;
  text-decoration: none;
}
.rlb .rlb-footer .author-information {
  font-family: 'Montserrat', "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  background-color: #fff;
  text-align: center;
  padding: 3rem 1rem;
}
@media only screen and (min-width: 1024px) {
  .rlb .rlb-footer .author-information {
    padding: 8rem 1rem;
  }
}
.rlb .rlb-footer .author-information a {
  font-size: 0.6rem;
}
.rlb .rlb-footer .author-information .author-subline {
  padding-top: 0.5rem;
  font-size: 0.6rem;
  line-height: 1.5;
}
.social-networks > * {
  padding-top: 0.5rem;
}
.author-avatar {
  margin-bottom: 0.5rem;
}
.author-avatar img {
  max-width: 30%;
  border-radius: 100%;
}
@media only screen and (min-width: 700px) {
  .author-avatar img {
    max-width: 200px;
  }
}
.rlb .rlb-footer .copy-right-notice {
  background-color: #00bdff;
  color: #fff;
  text-align: center;
  padding: 2rem 1rem;
  padding-bottom: 6rem;
}
.rlb .rlb-footer .copy-right-notice .copyright-hint {
  font-family: 'Montserrat', "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  text-transform: uppercase;
  font-size: 0.6rem;
  letter-spacing: 1px;
}
.rlb .rlb-footer .impressum-link {
  font-family: 'Montserrat', "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  text-transform: uppercase;
  font-size: 0.6rem;
  letter-spacing: 1px;
  border-bottom: 1px solid #fff;
  padding-bottom: 1rem;
}
.rlb .rlb-footer .impressum-link a {
  color: #fff;
}
.rlb .rlb-footer {
  overflow: hidden;
  position: relative;
  z-index: 2000;
}
.rlb .headline-primary {
  font-family: 'Montserrat', "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  font-size: 5em;
  font-size: 6vw;
  font-weight: 700;
  text-transform: uppercase;
  line-height: 1.3;
  margin-top: 0.5rem;
}
@media only screen and (min-width: 700px) {
  .rlb .headline-primary {
    font-size: 2rem;
  }
}
.rlb .headline-sub {
  font-family: 'Montserrat', "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  font-size: 1.1rem;
  font-size: 4.5vw;
  line-height: 1.1;
}
@media only screen and (min-width: 700px) {
  .rlb .headline-sub {
    font-size: 1.1rem;
  }
}
.rlb .hero-banner-content {
  background-color: #f5f5f5;
}
.rlb .hero-banner {
  background-color: hero-banner-bg;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
}
@media only screen and (min-width: 700px) {
  .rlb .hero-banner {
    text-align: center;
  }
}
.rlb .hero-banner .brand.in-hero-banner .brand-subline {
  display: none;
}
.rlb .hero-banner .hero-banner-message {
  padding: 1rem;
}
.rlb .hero-banner .hero-banner-message .headline-sub,
.rlb .hero-banner .hero-banner-message .headline-primary {
  color: #fff;
}
.rlb .hero-banner .hero-banner-message .hero-banner-call2action {
  margin-top: 2rem;
}
@media only screen and (min-width: 700px) {
  .rlb .hero-banner .hero-banner-message .hero-banner-call2action {
    display: inline-block;
    padding: 0.8rem 4rem;
  }
}
.no-js .rlb .hero-banner-page {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: column;
  -ms-flex-flow: column;
  flex-flow: column;
}
.no-js .rlb .hero-banner-page .hero-banner {
  -webkit-order: -1;
  -ms-flex-order: -1;
  order: -1;
  margin-bottom: 3rem;
}
.no-js .rlb .hero-banner-page .brand.in-hero-banner {
  display: none;
}
@media only screen and (min-width: 1024px) {
  .js .brand.in-hero-banner {
    color: #fff;
    top: 1rem;
    left: 1rem;
    text-align: left;
  }
  .js .brand.in-hero-banner .brand-subline {
    display: none;
  }
}
.js .rlb .hero-banner {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: -1;
}
.js .rlb .hero-banner .hero-banner-message {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 5%;
}
@media only screen and (min-width: 700px) and (max-width: 1023px) {
  .js .rlb .hero-banner .hero-banner-message {
    left: 10%;
    right: 10%;
  }
}
@media only screen and (min-width: 1024px) {
  .js .rlb .hero-banner .hero-banner-message {
    left: 10%;
    right: 10%;
  }
}
.js .rlb .hero-banner .hero-banner-message .headline-primary {
  font-size: 3vw;
}
@media only screen and (min-width: 700px) and (max-width: 1023px) {
  .js .rlb .hero-banner .hero-banner-message .headline-primary {
    font-size: 5vw;
  }
}
.js .rlb .hero-banner-page > *:first-child {
  display: none;
}
.js .rlb .hero-banner-page > *:last-child {
  display: block;
}
.js .rlb .hero-banner-page > *:target,
.js .rlb .hero-banner-page > .selected-target {
  display: block;
  -webkit-animation: pulse 0.2s linear 1;
  animation: pulse 0.2s linear 1;
}
.js .rlb .hero-banner-page > *:target ~ *,
.js .rlb .hero-banner-page > .selected-target ~ * {
  display: none;
}
.markdown-container h1,
.markdown-container h2,
.markdown-container h3,
.markdown-container h4,
.markdown-container h5,
.markdown-container h6 {
  margin-top: 1.5em;
  margin-bottom: 0;
}
.markdown-container h1 {
  font-size: 1.828rem;
  line-height: 2rem;
}
.markdown-container h2 {
  font-size: 1.414rem;
  line-height: 1.5rem;
}
.markdown-container h3 {
  font-size: 1.107rem;
  line-height: 1.2rem;
}
.markdown-container h4,
.markdown-container h5,
.markdown-container h6 {
  font-size: 1rem;
  line-height: 1.2rem;
}
.markdown-container p {
  margin-top: 0.5rem;
  margin-bottom: 1rem;
}
.markdown-container blockquote {
  border-left: 5px solid #ececec;
  padding-left: 0.5rem;
}
.markdown-container strong {
  font-weight: 400;
}
.markdown-container em {
  font-style: italic;
}
.nav-link {
  font-family: 'Montserrat', "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  font-size: 0.4rem;
}
@media only screen and (min-width: 700px) {
  .nav-link {
    font-size: 0.6rem;
  }
}
.nav-list {
  margin: 0;
  padding: 3rem 0 0 0;
}
.js .nav-list {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  overflow-y: scroll;
}
.nav-item {
  line-height: 1.3;
  padding: 0.5rem 0.5rem 0.5rem 1.5rem;
  position: relative;
  border-top: 1px solid #e6e6e6;
  width: 100%;
}
.nav-item.active:before {
  color: #ffa500;
}
.nav-item:before {
  position: absolute;
  left: 0.5rem;
  top: 50%;
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%);
  font-size: 0.6rem;
}
.nav-item:last-of-type {
  border-bottom: 1px solid #e6e6e6;
}
.nav-item.impressum {
  margin-top: 3rem;
  border-top: none;
  border-bottom: none;
}
.nav-item.impressum a,
.nav-item.impressum:before {
  color: #b3b3b3;
}
.nav-item.impressum:hover a,
.nav-item.impressum:hover:before {
  color: #000;
}
.nav-item .post-nav-meta,
.nav-item .post-nav-meta span {
  font-family: 'Montserrat', "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  margin-top: 0.2rem;
  color: #9e9e9e;
  font-size: 0.3rem;
  font-weight: 100;
  line-height: 1.1;
}
@media only screen and (min-width: 700px) {
  .nav-item .post-nav-meta,
  .nav-item .post-nav-meta span {
    font-size: 0.5rem;
  }
}
.nav {
  background-color: #fff;
  width: 100%;
}
.js .nav {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 100%;
  z-index: 999;
  -webkit-transform-style: preserve-3d;
  -webkit-overflow-scrolling: touch;
}
.nav.active {
  -webkit-animation: nav-slide 0.2s forwards;
  animation: nav-slide 0.2s forwards;
}
@media only screen and (min-width: 700px) and (max-width: 1023px) {
  .nav.active {
    -webkit-animation: nav-slide-tablet 0.2s forwards;
    animation: nav-slide-tablet 0.2s forwards;
  }
}
@media only screen and (min-width: 1024px) {
  .nav.active {
    -webkit-animation: nav-slide-tablet 0.2s forwards;
    animation: nav-slide-tablet 0.2s forwards;
  }
}
.nav-close {
  display: none;
}
.js .nav-close,
.js .nav-toggle,
.js .nav-rss,
.js .nav-twitter {
  position: absolute;
  border: none;
  outline: none;
}
.nav .nav-rss,
.nav .nav-twitter {
  top: 3rem;
  width: 3rem;
  right: 100%;
  background-color: transparent;
  color: #fff;
  text-align: center;
  padding-top: 1.5rem;
  padding-bottom: 0.5rem;
}
.nav .nav-rss.tooltip:hover:after,
.nav .nav-twitter.tooltip:hover:after {
  right: 80%;
}
.nav .nav-rss:hover,
.nav .nav-twitter:hover {
  color: #fe4586;
  text-decoration: none;
}
.nav .nav-twitter {
  top: 4.5rem;
}
.nav .nav-twitter:hover {
  color: #4099ff;
}
.nav-close {
  top: 1rem;
  right: 1rem;
  background-color: transparent;
  z-index: 1001;
}
.nav-toggle {
  right: 100%;
  top: 0;
  width: 3rem;
  height: 3rem;
  background-color: #fff;
  color: #000;
}
.nav-toggle:after {
  content: 'menu';
  position: absolute;
  top: 50%;
  right: 110%;
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #fff;
  font-family: 'Montserrat', "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  font-weight: bold;
}
.nav-toggle:hover:after {
  color: #fe4586;
}
.post-footer {
  display: none;
  box-sizing: border-box;
  position: fixed;
  top: 100%;
  left: 0;
  width: 100%;
  background-color: #fff;
  padding: 0.5rem 1rem 1rem 1rem;
  z-index: 10;
  border-bottom: 500px solid #fff;
}
.post:target .post-footer,
.post.active .post-footer {
  bottom: -500px;
  top: auto;
}
.post-footer .headline-sub {
  margin: 0;
  padding: 0;
  font-weight: 700;
  width: 100%;
  margin-top: 0.3rem;
  line-height: 1.3;
  font-size: 0.5rem;
}
@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  .post-footer .headline-sub {
    font-size: 0.8rem;
  }
}
.post-footer .post-footer-content .headline-sub {
  padding-top: 0.5rem;
  font-size: 0.65rem;
}
.post-footer .post-footer-content .open {
  display: none;
}
.js .post.active .post-footer {
  display: block;
}
.js .post-footer-content {
  overflow: hidden;
  max-height: 0;
  transition: max-height 0.35s ease-out;
}
.js .post-footer .scroll-status {
  display: inline;
}
.js .post-footer .open,
.js .post-footer .copy-link {
  display: block;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-20%);
  transform: translateY(-20%);
}
.js .post-footer .open:active,
.js .post-footer .copy-link:active {
  -webkit-animation: pulse 0.2s linear 1;
  animation: pulse 0.2s linear 1;
}
.js .post-footer .open {
  left: 0;
}
.js .post-footer .open.tooltip.up:hover:after {
  left: -0.5rem;
  right: auto;
  bottom: 150%;
  -webkit-transform: translateX(0%);
  transform: translateX(0%);
}
.js .post-footer .copy-link {
  right: 0;
  -webkit-transform: translateY(-20%);
  transform: translateY(-20%);
}
.js .post-footer .copy-link:hover {
  text-decoration: none;
}
.js .post-footer .copy-link.tooltip.up:hover:after {
  right: -0.5rem;
  left: auto;
  bottom: 150%;
  -webkit-transform: translateX(0%);
  transform: translateX(0%);
}
.js .post-footer.active .post-footer-content {
  max-height: 500px;
  transition: max-height 0.25s ease-in;
}
.post-nav {
  text-align: center;
  position: relative;
}
.post-nav .open,
.post-nav .copy-link {
  background: none;
  border: none;
  outline: none;
  cursor: pointer;
}
.post-tldr-headline {
  margin-top: 1.5rem;
}
.post-tldr {
  margin-top: 0.5rem;
  margin-bottom: 1.5rem;
  font-style: italic;
}
.post {
  padding-top: 3rem;
  padding-bottom: 3rem;
  position: relative;
}
.post .markdown-container > h1:first-child + p::first-letter,
.post .markdown-container > h2:first-child + p::first-letter,
.post .markdown-container > h3:first-child + p::first-letter {
  font-size: 3rem;
  float: left;
  line-height: 3rem;
  padding-right: 0.5rem;
}
.post .markdown-container > p:first-child::first-letter {
  font-size: 3rem;
  float: left;
  line-height: 3rem;
  padding-right: 0.5rem;
}
.post-meta {
  font-family: 'Montserrat', "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  margin-top: 0;
}
.post-category,
.post-date,
.post-author {
  font-family: 'Montserrat', "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  font-size: 0.7rem;
  font-size: 3.2vw;
  white-space: nowrap;
}
@media only screen and (min-width: 700px) {
  .post-category,
  .post-date,
  .post-author {
    font-size: 0.7rem;
  }
}
.post-category,
.post-date {
  text-transform: uppercase;
}
.post-author {
  display: block;
  line-height: 1;
}
.posts {
  padding: 1rem;
}
@media only screen and (min-width: 700px) and (max-width: 1023px) {
  .posts {
    padding: 1rem 10%;
  }
}
@media only screen and (min-width: 1024px) {
  .posts {
    padding: 1rem 10% 1rem 40%;
  }
}
.posts a.fa:hover {
  color: #fe4586;
}
.scroll-status {
  margin: 0 auto;
  padding-top: 0;
}
.scroll-status-bubble {
  background-color: #c8c8c8;
  height: 5px;
  width: 5px;
  display: inline-block;
  border-radius: 5px;
  margin-right: 0.5rem;
}
.scroll-status-bubble.active {
  background-color: #7c7a7a;
}
.tooltip:hover:after,
.copy-link-tooltip {
  content: attr(title);
  white-space: nowrap;
  z-index: 9999;
  position: absolute;
  background-color: #323232;
  color: #fff;
  padding: 0.5rem 1rem;
  text-transform: lowercase;
  font-size: 0.6rem;
  border-radius: 3px;
}
.tooltip.left:hover:after,
.tooltip.right:hover:after {
  top: 50%;
  -webkit-transform: translateY(-30%);
  transform: translateY(-30%);
}
.tooltip.left:hover:after {
  right: 100%;
}
.tooltip.right:hover:after {
  left: 100%;
}
.tooltip.bottom:hover:after,
.tooltip.up:hover:after {
  left: 50%;
  -webkit-transform: translateX(-50%);
  transform: translateX(-50%);
}
.tooltip.bottom:hover:after {
  top: 100%;
}
.tooltip.up:hover:after {
  bottom: 100%;
}
.copy-link-tooltip {
  position: absolute;
  bottom: 90%;
  right: -1000%;
  padding: 0.3rem 2.2rem 0.5rem 0.5rem;
}
.copy-link-tooltip.active {
  max-width: 100%;
  right: 0;
}
.copy-link-hint {
  display: block;
  text-align: left;
  margin-bottom: 0.3rem;
}
.copy-link-text {
  max-width: 100%;
  border: none;
  padding: 0.3rem 0.6rem;
  border-radius: 2px;
  font-size: 1rem;
}
@media only screen and (min-width: 700px) {
  .copy-link-text {
    font-size: 0.6rem;
  }
}
.close-tooltip {
  background-color: transparent;
  border: none;
  position: absolute;
  right: 0.6rem;
  top: 50%;
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #fff;
  outline: none;
}
.finished .close-tooltip:before {
  content: '\f00c';
}
pre[class*="language-"] {
  padding: 0.5rem 1rem 0.7rem 1rem;
}
code {
  font-size: 0.6rem;
}
:not(pre) > code[class*="language-"],
pre[class*="language-"] {
  background: #fff;
  margin-right: -1rem;
  margin-left: -1rem;
  line-height: 0.8;
}
.static-view {
  padding: 1rem;
  -webkit-animation: pulse 0.2s linear 1;
  animation: pulse 0.2s linear 1;
}
.static-view h3 {
  margin-bottom: 1rem;
}
.static-view p {
  padding: 0;
  margin-top: 0;
  margin-bottom: 0.5rem;
}
.static-view strong {
  font-weight: bold;
}

/*# sourceMappingURL=data:application/json;base64, */
